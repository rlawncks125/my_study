{"version":3,"sources":["webpack:///./src/views/HTML-views/텍스트관련.vue","webpack:///./src/views/HTML-views/텍스트관련.vue?9c79","webpack:///./src/views/HTML-views/텍스트관련.vue?f76b","webpack:///./src/views/HTML-views/링크_이미지_관련.vue?b5b7","webpack:///./src/assets/mov_bbb.mp4","webpack:///./node_modules/core-js/modules/es.string.sub.js","webpack:///./src/views/HTML-views/테이블관련.vue?aa18","webpack:///./src/views/HTML-views/테이블관련.vue","webpack:///./src/views/HTML-views/테이블관련.vue?0c2a","webpack:///./src/views/HTML-views/테이블관련.vue?32d9","webpack:///./node_modules/core-js/modules/es.string.sup.js","webpack:///./src/views/HTML-views/목록관련.vue","webpack:///./src/views/HTML-views/목록관련.vue?d3d3","webpack:///./src/views/HTML-views/목록관련.vue?9ddd","webpack:///./src/views/HTML-views/기본구조.vue","webpack:///./src/views/HTML-views/기본구조.vue?93e4","webpack:///./src/views/HTML-views/기본구조.vue?57b7","webpack:///./node_modules/core-js/internals/create-html.js","webpack:///./src/views/HTML-views/멀티미디어관련.vue","webpack:///./src/views/HTML-views/멀티미디어관련.vue?4b34","webpack:///./src/views/HTML-views/멀티미디어관련.vue?d79d","webpack:///./node_modules/core-js/internals/string-html-forced.js","webpack:///./src/views/HTML-views/링크_이미지_관련.vue","webpack:///./src/views/HTML-views/링크_이미지_관련.vue?55e4","webpack:///./src/views/HTML-views/링크_이미지_관련.vue?9c99","webpack:///./src/views/HTML-views/HTML.vue","webpack:///./src/views/HTML-views/HTML.vue?8d57","webpack:///./src/views/HTML-views/HTML.vue?ce3b","webpack:///./src/views/HTML-views/폼관련.vue","webpack:///./src/views/HTML-views/폼관련.vue?451e","webpack:///./src/views/HTML-views/폼관련.vue?c0d9"],"names":["title","content","code","h","p","b","strong","em","i","ins","u","del","s","sup","sub","br","hr","pre","abbr","기타태그","setup","data","small","render","module","exports","$","createHTML","forcedStringHTMLMethod","target","proto","forced","this","style","colspan","rowspan","table","tr","th","td","caption","colgroup_col","thead_tbody_tfoot","__scopeId","ol","ul","li","dl","dt","dd","구조","DOCTYPE","HTML","HEAD","TITLE","META","LINK","BODY","기타구조","requireObjectCoercible","toString","quot","string","tag","attribute","value","S","p1","replace","class","width","height","controls","src","type","ref","frameborder","allow","allowfullscreen","video","audio","canvas","object_embed","iframe","canvasID","ctx","getContext","fillStyle","fillRect","fails","METHOD_NAME","test","toLowerCase","split","length","href","alt","max","a","img","svg","progress","picture","for","id","placeholder","name","cols","rows","list","폼관련","인풋타입","태그타입"],"mappings":"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","file":"js/HTML.c1daed59.js","sourcesContent":["<template>\n  <div></div>\n  <code-convert>\n    <template #title>h[1-6] </template>\n    <template #content>\n      <h1>h1</h1>\n      <h2>h2</h2>\n      <h3>h3</h3>\n      <h4>h4</h4>\n      <h5>h5</h5>\n      <h6>h6</h6>\n    </template>\n    <template #code>{{ h }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> p</template>\n    <template #content><p>p 태그입니다.</p></template>\n    <template #code>{{ p }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>b </template>\n    <template #content><b>b 태그 입니다.</b></template>\n    <template #code>{{ b }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>strong </template>\n    <template #content><strong>strong 태그입니다.</strong></template>\n    <template #code>{{ strong }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> em</template>\n    <template #content><em>em 태그입니다.</em></template>\n    <template #code>{{ em }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> i</template>\n    <template #content><i>i 태그입니다.</i></template>\n    <template #code>{{ i }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>ins </template>\n    <template #content><ins>ins 태그입니다.</ins></template>\n    <template #code>{{ ins }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> u</template>\n    <template #content><u>u 태그입니다.</u></template>\n    <template #code>{{ u }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>del </template>\n    <template #content><del>del 태그입니다.</del></template>\n    <template #code>{{ del }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>s </template>\n    <template #content><s>s 태그입니다.</s></template>\n    <template #code>{{ s }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>sup </template>\n    <template #content>글<sup>sup 태그입니다.</sup></template>\n    <template #code>{{ sup }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>sub </template>\n    <template #content>글<sub>sub 태그입니다.</sub></template>\n    <template #code>{{ sub }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> small</template>\n    <template #content><small>small 태그입니다.</small></template>\n    <template #code>{{}} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> br</template>\n    <template #content><br /></template>\n    <template #code>{{ br }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>hr </template>\n    <template #content><hr /></template>\n    <template #code>{{ hr }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> pre</template>\n    <template #content\n      >글\n      <pre>pre 태그입니다.</pre>\n    </template>\n    <template #code>{{ pre }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>abbr </template>\n    <template #content\n      ><abbr title=\"약어에대한 설명입니다. title속성\"\n        >abbr 태그입니다.마우스올려보세요</abbr\n      ></template\n    >\n    <template #code>{{ abbr }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>기타태그 </template>\n    <template #code>{{ 기타태그 }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      h: codeProcess(`<h[1-6]>: 제목(heading)을 표시할 때 사용된다. <h1>이 가장 크고 <h6>이 가장 작다\n            /tt<h1>은 한 문서 안에 하나만 사용하는 것을 권장한다.`),\n      p: codeProcess(`<p>: 새 문단(paragraph)을 연다.`),\n      b: codeProcess(`<b>: 두껍게(bold) 효과를 준다`),\n      strong: codeProcess(\n        `<strong>: 포함된 텍스트를 강하게 강조할 때 사용한다.`\n      ),\n      em: codeProcess(`<em>: <strong>보다 약한 강조를 나타낼 때 사용한다.`),\n      i: codeProcess(\n        `<i>: 텍스트를 기울임꼴(italic)로 표시한다. 기술 용어, 외국어, 일반적으로 기울임꼴로 사용되는 용어 등을 강조한다.`\n      ),\n      ins: codeProcess(`<ins>: 문서에 밑줄을 표시한다.`),\n      u: codeProcess(`<u>: 밑줄을 표시한다. 철자 오류를 지적하는데 사용`),\n      del: codeProcess(`<del>: 문서에서 취소선을 표시한다.`),\n      s: codeProcess(`<s>: 취소선을 표시한다. <del>보다 약한 의미`),\n      sup: codeProcess(`<sup>: 텍스트를 위첨자(superscript)로 표시한다.`),\n      sub: codeProcess(`<sub>: 텍스트를 아래첨자(subscript)로 표시한다.`),\n      small: codeProcess(`<small>: 텍스트를 조금 더 작게 표시한다.`),\n      br: codeProcess(`<br />: 문단 내 줄바꿈(line break)`),\n      hr: codeProcess(`<hr />: 가로줄(horizontal rule)을 넣는다`),\n      pre: codeProcess(\n        `<pre>: 서식 있는(Preformatted) 텍스트를 넣기 위한 태그이다. 이 태그 안에는 <br> 태그 없이 개행하더라도 개행을 인식하고 공백 문자가 두 개 이상 연속으로 있어도 하나로 취급하지 않고 그대로 표시된다. 또한, 일반적으로 이 태그 안에 들어간 텍스트는 고정폭 글꼴로 표시된다. 이 태그 안에 다른 태그를 넣으면 경우에 따라 의도치 않게 표시될 수도 있으므로 가급적이면 다른 태그를 넣지 않는 것이 좋다.`\n      ),\n      abbr: codeProcess(\n        `<abbr>: 약어를 이 태그로 묶어서 무엇의 약어인지 설명하기 위한 태그이다. <abbr title=\"약어에 대한 설명\">약어</abbr> 식으로 써서 마우스 커서를 대면 설명이 떠서 읽을 수 있게 한다`\n      ),\n      기타태그: codeProcess(`// 잘안쓰일거 같은 태그\n\n    <wbr>: 글이 길어질 때 띄어쓰기가 없더라도 이 태그가 쓰인 부분에서 자동개행이 이루어진다. 예를 들어, Java<wbr>Programming이라고 쓰면 개행되지 않을 때는 'JavaProgramming'으로 붙어서 나오지만 자동개행시 <wbr> 태그 앞뒤로 위치한 'Java'와 'Programming'이 서로 분리될 수 있다. 원래는 개행을 방지하는 비표준 태그 <nobr> 안애서 <br> 태그와 같은 기능을 하는 태그였으나 HTML5에서 표준으로 채택되면서 기능이 변경된 것. 코더들 사이에서 이 태그와 SHY 중 무엇을 써야 할 지 의견이 분분하다. 다만 한글은 글자 단위로 개행이 되기 때문에 한글에다가 이 태그를 쓸 필요성은 거의 없다.\n    <blockquote>: 인용구를 기술하는 태그이다. 기본적으로 들여쓰기가 되어 있는데 CSS로 없앨 수 있다.\n    <q>: <blockquote>의 인라인 버전.\n    <dfn>: 후술할 <dl>의 인라인 버전.\n    <var>, <samp>, <kbd>, <code>: 변수 등 프로그래밍 언어와의 연계를 위한 태그.\n    <ruby>: 후리가나(루비 문자) 표기에 쓰이는 기본 태그. 절대 Ruby를 프로그래밍하기 위한 태그가 아니다!\n    <rp>: 후리가나가 지원되지 않는 환경에서 표기할 텍스트를 지정한다.\n    <rt>: 후리가나를 쓴다.\n    <rb>: 합성어 등으로 후리가나가 여러 단어로 이루어지는 경우 등에 후리가나 영역을 지정하는데 쓰인다. W3C HTML 표준이나 WHATWG HTML Living Standard 표준이 아니다.\n    <rtc>: 후리가나의 의미적 주석을 넣는다. W3C HTML 표준이나 WHATWG HTML Living Standard 표준이 아니다.`),\n    });\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      h: codeProcess(`<h[1-6]>: 제목(heading)을 표시할 때 사용된다. <h1>이 가장 크고 <h6>이 가장 작다\n            /tt<h1>은 한 문서 안에 하나만 사용하는 것을 권장한다.`),\n      p: codeProcess(`<p>: 새 문단(paragraph)을 연다.`),\n      b: codeProcess(`<b>: 두껍게(bold) 효과를 준다`),\n      strong: codeProcess(\n        `<strong>: 포함된 텍스트를 강하게 강조할 때 사용한다.`\n      ),\n      em: codeProcess(`<em>: <strong>보다 약한 강조를 나타낼 때 사용한다.`),\n      i: codeProcess(\n        `<i>: 텍스트를 기울임꼴(italic)로 표시한다. 기술 용어, 외국어, 일반적으로 기울임꼴로 사용되는 용어 등을 강조한다.`\n      ),\n      ins: codeProcess(`<ins>: 문서에 밑줄을 표시한다.`),\n      u: codeProcess(`<u>: 밑줄을 표시한다. 철자 오류를 지적하는데 사용`),\n      del: codeProcess(`<del>: 문서에서 취소선을 표시한다.`),\n      s: codeProcess(`<s>: 취소선을 표시한다. <del>보다 약한 의미`),\n      sup: codeProcess(`<sup>: 텍스트를 위첨자(superscript)로 표시한다.`),\n      sub: codeProcess(`<sub>: 텍스트를 아래첨자(subscript)로 표시한다.`),\n      small: codeProcess(`<small>: 텍스트를 조금 더 작게 표시한다.`),\n      br: codeProcess(`<br />: 문단 내 줄바꿈(line break)`),\n      hr: codeProcess(`<hr />: 가로줄(horizontal rule)을 넣는다`),\n      pre: codeProcess(\n        `<pre>: 서식 있는(Preformatted) 텍스트를 넣기 위한 태그이다. 이 태그 안에는 <br> 태그 없이 개행하더라도 개행을 인식하고 공백 문자가 두 개 이상 연속으로 있어도 하나로 취급하지 않고 그대로 표시된다. 또한, 일반적으로 이 태그 안에 들어간 텍스트는 고정폭 글꼴로 표시된다. 이 태그 안에 다른 태그를 넣으면 경우에 따라 의도치 않게 표시될 수도 있으므로 가급적이면 다른 태그를 넣지 않는 것이 좋다.`\n      ),\n      abbr: codeProcess(\n        `<abbr>: 약어를 이 태그로 묶어서 무엇의 약어인지 설명하기 위한 태그이다. <abbr title=\"약어에 대한 설명\">약어</abbr> 식으로 써서 마우스 커서를 대면 설명이 떠서 읽을 수 있게 한다`\n      ),\n      기타태그: codeProcess(`// 잘안쓰일거 같은 태그\n\n    <wbr>: 글이 길어질 때 띄어쓰기가 없더라도 이 태그가 쓰인 부분에서 자동개행이 이루어진다. 예를 들어, Java<wbr>Programming이라고 쓰면 개행되지 않을 때는 'JavaProgramming'으로 붙어서 나오지만 자동개행시 <wbr> 태그 앞뒤로 위치한 'Java'와 'Programming'이 서로 분리될 수 있다. 원래는 개행을 방지하는 비표준 태그 <nobr> 안애서 <br> 태그와 같은 기능을 하는 태그였으나 HTML5에서 표준으로 채택되면서 기능이 변경된 것. 코더들 사이에서 이 태그와 SHY 중 무엇을 써야 할 지 의견이 분분하다. 다만 한글은 글자 단위로 개행이 되기 때문에 한글에다가 이 태그를 쓸 필요성은 거의 없다.\n    <blockquote>: 인용구를 기술하는 태그이다. 기본적으로 들여쓰기가 되어 있는데 CSS로 없앨 수 있다.\n    <q>: <blockquote>의 인라인 버전.\n    <dfn>: 후술할 <dl>의 인라인 버전.\n    <var>, <samp>, <kbd>, <code>: 변수 등 프로그래밍 언어와의 연계를 위한 태그.\n    <ruby>: 후리가나(루비 문자) 표기에 쓰이는 기본 태그. 절대 Ruby를 프로그래밍하기 위한 태그가 아니다!\n    <rp>: 후리가나가 지원되지 않는 환경에서 표기할 텍스트를 지정한다.\n    <rt>: 후리가나를 쓴다.\n    <rb>: 합성어 등으로 후리가나가 여러 단어로 이루어지는 경우 등에 후리가나 영역을 지정하는데 쓰인다. W3C HTML 표준이나 WHATWG HTML Living Standard 표준이 아니다.\n    <rtc>: 후리가나의 의미적 주석을 넣는다. W3C HTML 표준이나 WHATWG HTML Living Standard 표준이 아니다.`),\n    });\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./텍스트관련.vue?vue&type=template&id=97335c96\"\nimport script from \"./텍스트관련.vue?vue&type=script&lang=ts\"\nexport * from \"./텍스트관련.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./링크_이미지_관련.vue?vue&type=style&index=0&id=b8106288&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"media/mov_bbb.198918f4.mp4\";","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.sub` method\n// https://tc39.es/ecma262/#sec-string.prototype.sub\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {\n  sub: function sub() {\n    return createHTML(this, 'sub', '', '');\n  }\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./테이블관련.vue?vue&type=style&index=0&id=6346a73a&scoped=true&lang=css\"","<template>\n  <code-convert>\n    <template #title> table</template>\n    <template #content>\n      <table style=\"width: 100%; text-align: center\">\n        <caption style=\"text-align: left\">\n          caption : 테이블 제목넣는곳입니다.\n        </caption>\n        <thead>\n          <tr>\n            <th>성</th>\n            <th>이름</th>\n            <th>연락처</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>김</td>\n            <td>두루미</td>\n            <td>010-0101-0101</td>\n          </tr>\n          <tr>\n            <td>이</td>\n            <td>선생</td>\n            <td>010-0101-0101</td>\n          </tr>\n          <tr>\n            <td colspan=\"2\">성 + 이름</td>\n            <td>colspan col병합</td>\n          </tr>\n          <tr>\n            <td rowspan=\"2\">성 + 성<br />(row병합)</td>\n            <td>이름1</td>\n            <td>연란처1</td>\n          </tr>\n          <tr>\n            <td>이름2</td>\n            <td>연락처2</td>\n          </tr>\n        </tbody>\n      </table>\n    </template>\n    <template #code>{{ table }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>tr </template>\n    <template #content></template>\n    <template #code>{{ tr }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> th</template>\n    <template #content></template>\n    <template #code>{{ th }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>td </template>\n    <template #content></template>\n    <template #code>{{ td }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>caption </template>\n    <template #content></template>\n    <template #code>{{ caption }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>colgroup_col </template>\n    <template #content></template>\n    <template #code>{{ colgroup_col }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>thead_tbody_tfoot </template>\n    <template #content></template>\n    <template #code>{{ thead_tbody_tfoot }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      table: codeProcess(`<table>: 테이블을 만드는 태그이다.\n      \n      // 구조 \n       <table style=\"width: 100vw; text-align: center\">\n        /tt<caption style=\"text-align: left\">\n          /tt/ttcaption : 테이블 제목넣는곳입니다.\n        /tt</caption>\n        /tt<thead>\n          /tt/tt<tr>\n            /tt/tt/tt<th>성</th>\n            /tt/tt/tt<th>이름</th>\n            /tt/tt/tt<th>연락처</th>\n          /tt/tt</tr>\n        /tt</thead>\n        /tt<tbody>\n          /tt/tt<tr>\n            /tt/tt/tt<td>김</td>\n            /tt/tt/tt<td>두루미</td>\n            /tt/tt/tt<td>010-0101-0101</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td>이</td>\n            /tt/tt/tt<td>선생</td>\n            /tt/tt/tt<td>010-0101-0101</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td colspan=\"2\">성 + 이름</td>\n            /tt/tt/tt<td>colspan col병합</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td rowspan=\"2\">성 + 성 br/ (row병합)</td>\n            /tt/tt/tt<td>이름1</td>\n            /tt/tt/tt<td>연란처1</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td>이름2</td>\n            /tt/tt/tt<td>연락처2</td>\n          /tt/tt</tr>\n        /tt</tbody>\n      </table>\n    // css\n        tr,\n        td,\n        th {\n        /ttborder: 1px solid black;\n        }\n      `),\n      tr: codeProcess(`<tr>: 행(table row)을 시작한다.`),\n      th: codeProcess(\n        `<th>: 테이블의 행, 열의 머리말(table heading)을 나타낸다. 기본적으로 가운데로 정렬되고 굵은 글씨로 표시된다.`\n      ),\n      td: codeProcess(`<td>: 표의 내용(table data), 셀을 표현한다.`),\n      caption: codeProcess(`<caption>: 테이블의 제목을 기술한다.`),\n      colgroup_col: codeProcess(\n        `<colgroup>, <col>: 테이블 상단에 넣어 테이블의 열 정보를 기술한다. 주로 일괄적으로 셀의 너비를 지정할 때 쓰인다.`\n      ),\n      thead_tbody_tfoot: codeProcess(\n        `<thead>, <tbody>, <tfoot>: 테이블의 세부 구조를 기술한다. 각각 표의 상단, 본문, 하단 부분에 대응한다.`\n      ),\n    });\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped>\ntr,\ntd,\nth {\n  border: 1px solid black;\n}\n</style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      table: codeProcess(`<table>: 테이블을 만드는 태그이다.\n      \n      // 구조 \n       <table style=\"width: 100vw; text-align: center\">\n        /tt<caption style=\"text-align: left\">\n          /tt/ttcaption : 테이블 제목넣는곳입니다.\n        /tt</caption>\n        /tt<thead>\n          /tt/tt<tr>\n            /tt/tt/tt<th>성</th>\n            /tt/tt/tt<th>이름</th>\n            /tt/tt/tt<th>연락처</th>\n          /tt/tt</tr>\n        /tt</thead>\n        /tt<tbody>\n          /tt/tt<tr>\n            /tt/tt/tt<td>김</td>\n            /tt/tt/tt<td>두루미</td>\n            /tt/tt/tt<td>010-0101-0101</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td>이</td>\n            /tt/tt/tt<td>선생</td>\n            /tt/tt/tt<td>010-0101-0101</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td colspan=\"2\">성 + 이름</td>\n            /tt/tt/tt<td>colspan col병합</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td rowspan=\"2\">성 + 성 br/ (row병합)</td>\n            /tt/tt/tt<td>이름1</td>\n            /tt/tt/tt<td>연란처1</td>\n          /tt/tt</tr>\n          /tt/tt<tr>\n            /tt/tt/tt<td>이름2</td>\n            /tt/tt/tt<td>연락처2</td>\n          /tt/tt</tr>\n        /tt</tbody>\n      </table>\n    // css\n        tr,\n        td,\n        th {\n        /ttborder: 1px solid black;\n        }\n      `),\n      tr: codeProcess(`<tr>: 행(table row)을 시작한다.`),\n      th: codeProcess(\n        `<th>: 테이블의 행, 열의 머리말(table heading)을 나타낸다. 기본적으로 가운데로 정렬되고 굵은 글씨로 표시된다.`\n      ),\n      td: codeProcess(`<td>: 표의 내용(table data), 셀을 표현한다.`),\n      caption: codeProcess(`<caption>: 테이블의 제목을 기술한다.`),\n      colgroup_col: codeProcess(\n        `<colgroup>, <col>: 테이블 상단에 넣어 테이블의 열 정보를 기술한다. 주로 일괄적으로 셀의 너비를 지정할 때 쓰인다.`\n      ),\n      thead_tbody_tfoot: codeProcess(\n        `<thead>, <tbody>, <tfoot>: 테이블의 세부 구조를 기술한다. 각각 표의 상단, 본문, 하단 부분에 대응한다.`\n      ),\n    });\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./테이블관련.vue?vue&type=template&id=6346a73a&scoped=true\"\nimport script from \"./테이블관련.vue?vue&type=script&lang=ts\"\nexport * from \"./테이블관련.vue?vue&type=script&lang=ts\"\n\nimport \"./테이블관련.vue?vue&type=style&index=0&id=6346a73a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-6346a73a\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.sup` method\n// https://tc39.es/ecma262/#sec-string.prototype.sup\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sup') }, {\n  sup: function sup() {\n    return createHTML(this, 'sup', '', '');\n  }\n});\n","<template>\n  <code-convert>\n    <template #title> ol</template>\n    <template #content>\n      <ol>\n        <li>li1</li>\n        <li>li2</li>\n      </ol>\n    </template>\n    <template #code>{{ ol }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> ul</template>\n    <template #content>\n      <ul>\n        <dl>정의 목록(dl)</dl>\n        <dt>정의 기술(dt)</dt>\n        <dd>뜻 풀이(dd)</dd>\n        <li>li1</li>\n        <li>li2</li>\n      </ul>\n    </template>\n    <template #code>{{ ul }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> li</template>\n    <template #content>\n      <li>li</li>\n    </template>\n    <template #code>{{ li }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> dl</template>\n    <template #content>\n      <dl>dl 태그입니다.</dl>\n    </template>\n    <template #code>{{ dl }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> dt</template>\n    <template #content>\n      <dt>dt 태그입니다.</dt>\n    </template>\n    <template #code>{{ dt }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> dd</template>\n    <template #content>\n      <dd>dd 태그입니다.</dd>\n    </template>\n    <template #code>{{ dd }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      ol: codeProcess(\n        `<ol>: 순서 있는 목록(ordered list)을 표시한다.( 기능은 ul와 차이없고 비주얼적인 태그)`\n      ),\n      ul: codeProcess(`<ul>: 순서 없는 목록(unordered list)을 표시한다.`),\n      li: codeProcess(\n        `<li>: 목록에서 각 항목(list item)은 <li>와 </li>사이에 넣는다.`\n      ),\n      dl: codeProcess(`<dl>: 정의 목록(definition list)을 표시한다.`),\n      dt: codeProcess(`<dt>: 정의 목록의 정의(definition term)를 기술한다.`),\n      dd: codeProcess(\n        `<dd>: 정의 목록의 뜻풀이(definition description)를 기술한다. 기본적으로 들여쓰기가 되어 있는데 CSS로 없앨 수 있다.`\n      ),\n    });\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      ol: codeProcess(\n        `<ol>: 순서 있는 목록(ordered list)을 표시한다.( 기능은 ul와 차이없고 비주얼적인 태그)`\n      ),\n      ul: codeProcess(`<ul>: 순서 없는 목록(unordered list)을 표시한다.`),\n      li: codeProcess(\n        `<li>: 목록에서 각 항목(list item)은 <li>와 </li>사이에 넣는다.`\n      ),\n      dl: codeProcess(`<dl>: 정의 목록(definition list)을 표시한다.`),\n      dt: codeProcess(`<dt>: 정의 목록의 정의(definition term)를 기술한다.`),\n      dd: codeProcess(\n        `<dd>: 정의 목록의 뜻풀이(definition description)를 기술한다. 기본적으로 들여쓰기가 되어 있는데 CSS로 없앨 수 있다.`\n      ),\n    });\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./목록관련.vue?vue&type=template&id=4585b144\"\nimport script from \"./목록관련.vue?vue&type=script&lang=ts\"\nexport * from \"./목록관련.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <code-convert>\n    <template #title> HTML 구조</template>\n    <template #code> {{ 구조 }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> !DOCTYPE</template>\n    <template #content></template>\n    <template #code> {{ DOCTYPE }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> HTML</template>\n    <template #code> {{ HTML }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> HEAD</template>\n    <template #code> {{ HEAD }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> TITLE</template>\n    <template #code> {{ TITLE }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> META</template>\n    <template #code> {{ META }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> LINK</template>\n    <template #code> {{ LINK }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> BODY</template>\n    <template #code> {{ BODY }}</template>\n  </code-convert>\n  <code-convert>\n    <template #title> 기타구조</template>\n    <template #code> {{ 기타구조 }}</template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      구조: codeProcess(`\n    <!DOCTYPE html>\n    <html lang=\"\">\n    /tt<head>\n    /tt/tt<meta charset=\"utf-8\" />\n    /tt/tt<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    /tt/tt<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    /tt/tt<link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\" />\n    /tt/tt<title> title </title>    \n    /tt</head>\n\n    /tt<body>\n    /tt/tt/tt<strong>\n    /tt/tt/tt/ttWe're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work\n    /tt/tt/tt/ttproperly without JavaScript enabled. Please enable it to\n    /tt/tt/tt/ttcontinue.\n    /tt/tt/tt</strong>\n    /tt/tt<div id=\"app\"></div>\n    /tt/tt<!-- built files will be auto injected -->\n    </body>\n</html>\n      `),\n      DOCTYPE: codeProcess(`\n        <!DOCTYPE> : 마크업 언어용 DTD 태그이다. HTML5의 경우 맨 위에 다음과 같이 써 주면 된다.\n        /ttex)<!DOCTYPE html>\n        `),\n      HTML: codeProcess(`\n      <html> : 위의 DTD를 제외한 전체를 이 태그로 둘러싼다.\n      `),\n      HEAD: codeProcess(`\n      <head> : HTML 문서의 속성을 지정하기 위한 태그이다. 이 태그 안에 타이틀이나 메타 태그 등을 넣는다.\n      `),\n      TITLE: codeProcess(`\n      <title> : HTML의 제목을 선언하는 태그.\n      `),\n      META: codeProcess(`\n      <meta> : HTML의 부가 정보를 선언하는 태그. 예를 들어 charset 속성을 쓰면 인코딩을 선언할 수 있다.\n      `),\n      LINK: codeProcess(`\n      <link> : 별도의 CSS 선언 파일, 파비콘(홈페이지 제목과 같이 나오는 아이콘) 등을 연결하는 태그.\n     `),\n      BODY: codeProcess(`\n      <body> : HTML 문서의 본 모양을 나타내기 위한 태그이다. 표시될 문서의 레이아웃을 이 태그 안에 넣으면 된다\n    `),\n      기타구조: codeProcess(`\n      <base>: 상대 링크(relative link) 해석의 기준이 되는 URL을 지정한다. tistory.com에 올라온 HTML 파일에 base href가 \"http://cafe.naver.com/cafesupport\"로 지정되어 있다면 \"joonggonara\"라는 링크를 걸었을 때 https://cafe.naver.com/joonggonara로 해석된다.\n\n      <style>: CSS 사용. 되도록이면 <link> 태그를 쓰기를 권장한다.\n\n      <script>: 스크립트를 사용한다. &ltscript type=\"text/javascript\"> ... &lt/script > 식으로 스크립트 타입을 지정해서 사용한다. HTML5에서는 type 속성을 생략하면 일반적으로 사용되는 자바스크립트로 인식한다. 인터넷 익스플로러에서는 VB스크립트를 사용할 수도 있었으나\n\n      <div>: 박스 또는 레이어. 일명 '웹 표준' 개념이 많은 사람들에게 퍼지게 된 이후 테이블 태그 대신 레이아웃을 만드는 데 자주 사용되고 있다\n      사실 div만 남발하는 것도 올바른 사용법은 아니고, 용도에 따라 여러가지 태그를 적절히 사용하는 것이 중요하다. <div> 이외에도 많은 태그가 <div>와 같은 박스 스타일로 렌더링되기 때문에 CSS만 잘 지정하면 된다.\n\n      <span>: <div>의 인라인 버전.\n\n      <figure>, <figcaption>: 그림이 덧붙여지는 내용 작성에 사용한다.\n\n      `),\n    });\n\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      구조: codeProcess(`\n    <!DOCTYPE html>\n    <html lang=\"\">\n    /tt<head>\n    /tt/tt<meta charset=\"utf-8\" />\n    /tt/tt<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    /tt/tt<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    /tt/tt<link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\" />\n    /tt/tt<title> title </title>    \n    /tt</head>\n\n    /tt<body>\n    /tt/tt/tt<strong>\n    /tt/tt/tt/ttWe're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work\n    /tt/tt/tt/ttproperly without JavaScript enabled. Please enable it to\n    /tt/tt/tt/ttcontinue.\n    /tt/tt/tt</strong>\n    /tt/tt<div id=\"app\"></div>\n    /tt/tt<!-- built files will be auto injected -->\n    </body>\n</html>\n      `),\n      DOCTYPE: codeProcess(`\n        <!DOCTYPE> : 마크업 언어용 DTD 태그이다. HTML5의 경우 맨 위에 다음과 같이 써 주면 된다.\n        /ttex)<!DOCTYPE html>\n        `),\n      HTML: codeProcess(`\n      <html> : 위의 DTD를 제외한 전체를 이 태그로 둘러싼다.\n      `),\n      HEAD: codeProcess(`\n      <head> : HTML 문서의 속성을 지정하기 위한 태그이다. 이 태그 안에 타이틀이나 메타 태그 등을 넣는다.\n      `),\n      TITLE: codeProcess(`\n      <title> : HTML의 제목을 선언하는 태그.\n      `),\n      META: codeProcess(`\n      <meta> : HTML의 부가 정보를 선언하는 태그. 예를 들어 charset 속성을 쓰면 인코딩을 선언할 수 있다.\n      `),\n      LINK: codeProcess(`\n      <link> : 별도의 CSS 선언 파일, 파비콘(홈페이지 제목과 같이 나오는 아이콘) 등을 연결하는 태그.\n     `),\n      BODY: codeProcess(`\n      <body> : HTML 문서의 본 모양을 나타내기 위한 태그이다. 표시될 문서의 레이아웃을 이 태그 안에 넣으면 된다\n    `),\n      기타구조: codeProcess(`\n      <base>: 상대 링크(relative link) 해석의 기준이 되는 URL을 지정한다. tistory.com에 올라온 HTML 파일에 base href가 \"http://cafe.naver.com/cafesupport\"로 지정되어 있다면 \"joonggonara\"라는 링크를 걸었을 때 https://cafe.naver.com/joonggonara로 해석된다.\n\n      <style>: CSS 사용. 되도록이면 <link> 태그를 쓰기를 권장한다.\n\n      <script>: 스크립트를 사용한다. &ltscript type=\"text/javascript\"> ... &lt/script > 식으로 스크립트 타입을 지정해서 사용한다. HTML5에서는 type 속성을 생략하면 일반적으로 사용되는 자바스크립트로 인식한다. 인터넷 익스플로러에서는 VB스크립트를 사용할 수도 있었으나\n\n      <div>: 박스 또는 레이어. 일명 '웹 표준' 개념이 많은 사람들에게 퍼지게 된 이후 테이블 태그 대신 레이아웃을 만드는 데 자주 사용되고 있다\n      사실 div만 남발하는 것도 올바른 사용법은 아니고, 용도에 따라 여러가지 태그를 적절히 사용하는 것이 중요하다. <div> 이외에도 많은 태그가 <div>와 같은 박스 스타일로 렌더링되기 때문에 CSS만 잘 지정하면 된다.\n\n      <span>: <div>의 인라인 버전.\n\n      <figure>, <figcaption>: 그림이 덧붙여지는 내용 작성에 사용한다.\n\n      `),\n    });\n\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./기본구조.vue?vue&type=template&id=01678098\"\nimport script from \"./기본구조.vue?vue&type=script&lang=ts\"\nexport * from \"./기본구조.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\n\n// `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + toString(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","<template>\n  <h1 class=\"div-line\">멀티미디어 관련</h1>\n  <code-convert>\n    <template #title> video</template>\n    <template #content>\n      <video width=\"320\" height=\"240\" controls>\n        <source src=\"../../assets/mov_bbb.mp4\" type=\"video/mp4\" />\n      </video>\n    </template>\n    <template #code>{{ video }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> audio</template>\n    <template #content></template>\n    <template #code>{{ audio }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> canvas</template>\n    <template #content>\n      <canvas ref=\"canvasID\"></canvas>\n    </template>\n    <template #code>{{ canvas }} </template>\n  </code-convert>\n  <br />\n  <br />\n  <h1 class=\"div-line\">외부 페이지 삽입</h1>\n  <code-convert>\n    <template #title> object_embed</template>\n    <template #content></template>\n    <template #code>{{ object_embed }} </template>\n  </code-convert>\n  <br />\n  <br />\n  <h1 class=\"div-line\">프레임</h1>\n  <code-convert>\n    <template #title> Iframe</template>\n    <template #content>\n      <iframe\n        width=\"500\"\n        height=\"285\"\n        src=\"https://www.youtube.com/embed/mw6pCi1IluU?list=RDmw6pCi1IluU\"\n        title=\"YouTube video player\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n    </template>\n    <template #code>{{ iframe }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, ref, toRefs, watch } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      video: codeProcess(`<video>: 비디오 재생\n    \n        // 코드 \n        <video width=\"320\" height=\"240\" controls>\n        /tt<source src=\"../../assets/mov_bbb.mp4\" type=\"video/mp4\" />\n        </video>  \n      `),\n      audio: codeProcess(`<audio>: 오디오 재생`),\n      canvas: codeProcess(\n        `<canvas>: 스크립트를 통해 그래픽을 그리는 데 사용될 수 있다. 예를 들어, 그래프 그리기, 사진 합성, 애니메이션 제작, 실시간 비디오 처리, 렌더링에 쓰일 수 있다\n        \n        //코드\n        // html\n        <canvas ref=\"canvasID\"></canvas>\n\n        // script\n        const canvasID = ref<HTMLCanvasElement>();\n\n    watch(canvasID, () => {\n      /ttconst ctx = canvasID.value?.getContext(\"2d\");\n\n      if (ctx) {\n        /ttctx.fillStyle = \"green\";\n        /ttctx.fillRect(10, 10, 150, 100);\n      }\n    });\n        `\n      ),\n      object_embed:\n        codeProcess(`<object>, <embed>: 웹 페이지 또는 외부 프로그램을 임베드한다.\nHTML 4.01에서 <embed>가 삭제되고 <object>로 대체되었으나 <object> 태그의 사용법이 워낙 복잡하다는 문제점이 있어서 HTML 5 규격에서 다시 표준으로 들어갔다. <embed>의 경우 파이어폭스에서 웹 페이지를 첨부할 수 없는 문제가 있었다.`),\n      iframe: codeProcess(\n        `<iframe> : inline frame의 줄임말이다. <iframe>은 문서 전체가 프레임인 게 아니라 문서 안에 박스형으로 프레임을 넣을 때 쓴다. 이 태그는 HTML5에서도 계속 지원된다. 물론 iframe도 남용하면 웹 접근성 저하되는 건 똑같다.\n        \n        // 코드\n        // 유투브 소스 코드 복사로 끌어옴\n      <iframe\n        /ttwidth=\"500\"\n        /ttheight=\"285\"\n        /ttsrc=\"https://www.youtube.com/embed/mw6pCi1IluU?list=RDmw6pCi1IluU\"\n        /tttitle=\"YouTube video player\"\n        /ttframeborder=\"0\"\n        /ttallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        /ttallowfullscreen>\n        </iframe>`\n      ),\n    });\n    const canvasID = ref<HTMLCanvasElement>();\n\n    watch(canvasID, () => {\n      const ctx = canvasID.value?.getContext(\"2d\");\n\n      if (ctx) {\n        ctx.fillStyle = \"green\";\n        ctx.fillRect(10, 10, 150, 100);\n      }\n    });\n\n    return { ...toRefs(data), canvasID };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, ref, toRefs, watch } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      video: codeProcess(`<video>: 비디오 재생\n    \n        // 코드 \n        <video width=\"320\" height=\"240\" controls>\n        /tt<source src=\"../../assets/mov_bbb.mp4\" type=\"video/mp4\" />\n        </video>  \n      `),\n      audio: codeProcess(`<audio>: 오디오 재생`),\n      canvas: codeProcess(\n        `<canvas>: 스크립트를 통해 그래픽을 그리는 데 사용될 수 있다. 예를 들어, 그래프 그리기, 사진 합성, 애니메이션 제작, 실시간 비디오 처리, 렌더링에 쓰일 수 있다\n        \n        //코드\n        // html\n        <canvas ref=\"canvasID\"></canvas>\n\n        // script\n        const canvasID = ref<HTMLCanvasElement>();\n\n    watch(canvasID, () => {\n      /ttconst ctx = canvasID.value?.getContext(\"2d\");\n\n      if (ctx) {\n        /ttctx.fillStyle = \"green\";\n        /ttctx.fillRect(10, 10, 150, 100);\n      }\n    });\n        `\n      ),\n      object_embed:\n        codeProcess(`<object>, <embed>: 웹 페이지 또는 외부 프로그램을 임베드한다.\nHTML 4.01에서 <embed>가 삭제되고 <object>로 대체되었으나 <object> 태그의 사용법이 워낙 복잡하다는 문제점이 있어서 HTML 5 규격에서 다시 표준으로 들어갔다. <embed>의 경우 파이어폭스에서 웹 페이지를 첨부할 수 없는 문제가 있었다.`),\n      iframe: codeProcess(\n        `<iframe> : inline frame의 줄임말이다. <iframe>은 문서 전체가 프레임인 게 아니라 문서 안에 박스형으로 프레임을 넣을 때 쓴다. 이 태그는 HTML5에서도 계속 지원된다. 물론 iframe도 남용하면 웹 접근성 저하되는 건 똑같다.\n        \n        // 코드\n        // 유투브 소스 코드 복사로 끌어옴\n      <iframe\n        /ttwidth=\"500\"\n        /ttheight=\"285\"\n        /ttsrc=\"https://www.youtube.com/embed/mw6pCi1IluU?list=RDmw6pCi1IluU\"\n        /tttitle=\"YouTube video player\"\n        /ttframeborder=\"0\"\n        /ttallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        /ttallowfullscreen>\n        </iframe>`\n      ),\n    });\n    const canvasID = ref<HTMLCanvasElement>();\n\n    watch(canvasID, () => {\n      const ctx = canvasID.value?.getContext(\"2d\");\n\n      if (ctx) {\n        ctx.fillStyle = \"green\";\n        ctx.fillRect(10, 10, 150, 100);\n      }\n    });\n\n    return { ...toRefs(data), canvasID };\n  },\n});\n","import { render } from \"./멀티미디어관련.vue?vue&type=template&id=11f9067e\"\nimport script from \"./멀티미디어관련.vue?vue&type=script&lang=ts\"\nexport * from \"./멀티미디어관련.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","<template>\n  <code-convert>\n    <template #title> a</template>\n    <template #content>\n      <p style=\"color: green\">속성 :</p>\n      <p style=\"color: green\">target : 링크를 클릭할때 창이 열릴 위치</p>\n      <ul>\n        <li>_self : 현재 창에서 열음 (기본값)</li>\n        <li>_blank : 새로운 창이나 탭(tab) 으로 열음</li>\n        <li>_parent : 현재 프레임의 부모 프레임에서 오픈</li>\n        <li>_top : 현재 윈도우 전체에서 오픈</li>\n        <li>프레임 이름 : 명시된 프레임에서 오픈 이름</li>\n      </ul>\n      <p style=\"color: green\">title : 마우스커서 올릴때 도움말 설명</p>\n      <hr />\n      <br />\n      <a href=\"https://blog.naver.com/rlawncks125\" target=\"_blank\"\n        >네이버블로그 새창 열기</a\n      >\n    </template>\n    <template #code>{{ a }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> img</template>\n    <template #content>\n      <p style=\"color: green\">속성 :</p>\n      <p style=\"color: green\">src : 경로 지정</p>\n      <ul>\n        <li>절대 경로 - http:// 또는 https</li>\n        <li>상대 경로 - path/to/image/file</li>\n        <li>data:image/jpeg|png|gif;base64, A1bC2dE3fG...</li>\n      </ul>\n      <p style=\"color: green\">\n        alt : 이미지를 볼 수 없는 경우에 이미지에 대한 설명을 제공한다. 이\n        속성값이 없어도 이미지파일의 경로가 유효하다면 표시되기는 하지만 웹표준\n        검사기에서 걸린다.\n      </p>\n      <p style=\"color: green\">\n        title : 이미지에 대한 추가 정보를 제공한다. 세피로트 이미지에 마우스를\n        갖다대면 말풍선으로 뜨는 것을 확인할 수 있다\n      </p>\n      <p style=\"color: green\">\n        height , width : 이미지의 세로, 가로폭을 지정한다. HTML 4.01까지는 그냥\n        숫자만 쓰면 픽셀로, 뒤에 %를 붙이면 백분율로 지정할 수 있었으나,\n        HTML5에서는 픽셀로만 지정할 수 있게 되었으므로 백분율로 지정하려면 CSS를\n        이용해야 한다.\n      </p>\n      <hr />\n      <br />\n      <img\n        src=\"https://res.cloudinary.com/dhdq4v4ar/image/upload/v1633711399/1633339608_gt2nbq.gif\"\n        alt=\"강아지 사진\"\n      />\n    </template>\n    <template #code>{{ img }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>svg </template>\n    <template #code>{{ svg }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> progress</template>\n    <template #content>\n      <progress></progress><br />\n      <progress value=\"40\" max=\"100\"></progress>\n    </template>\n    <template #code>{{ progress }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> picture</template>\n    <template #code>{{ picture }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      a: codeProcess(\n        `<a>: 하이퍼링크를 생성하는 태그이다. href 속성을 써서 <a href=\"링크할 페이지\">내용</a>와 같이 작성한다. 페이지 내의 책갈피를 위한 속성으로 name이 있었으나, id로 대체 가능하여 HTML5에서는 폐기되었다.`\n      ),\n      img: codeProcess(`페이지에 이미지를 추가하는 태그이다.`),\n      svg: codeProcess(\n        `<svg>: 페이지에 SVG 형식의 그래픽을 추가하는 태그이다. SVG 파일은 위의 <img> 태그로 넣어도 되지만 SVG 파일이 XML 형식으로 만들어져 있기에 별도의 SVG 파일을 만들지 않고 직접 코딩해서 넣는 것도 가능하다. 이 때 <svg> 태그를 사용한다.`\n      ),\n      progress: codeProcess(\n        `<progress>: 페이지에 진행 상황 막대를 추가하는 태그이다. 예를 들어 <progress value=\"22\" max=\"100\"></progress>와 같이 쓸 경우 22% 진행된 막대가 표시된다`\n      ),\n      picture: codeProcess(\n        `<picture>: 최신 HTML Living Standard에 추가된 이미지 태그로 <audio> 태그와 <video> 태그에 대응한다. 다양한 환경에서 서로 다른 이미지를 띄울 수 있게 한다. W3C HTML 표준에 반영되어 있지 않다.`\n      ),\n    });\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped>\nli {\n  list-style: square inside;\n}\n</style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      a: codeProcess(\n        `<a>: 하이퍼링크를 생성하는 태그이다. href 속성을 써서 <a href=\"링크할 페이지\">내용</a>와 같이 작성한다. 페이지 내의 책갈피를 위한 속성으로 name이 있었으나, id로 대체 가능하여 HTML5에서는 폐기되었다.`\n      ),\n      img: codeProcess(`페이지에 이미지를 추가하는 태그이다.`),\n      svg: codeProcess(\n        `<svg>: 페이지에 SVG 형식의 그래픽을 추가하는 태그이다. SVG 파일은 위의 <img> 태그로 넣어도 되지만 SVG 파일이 XML 형식으로 만들어져 있기에 별도의 SVG 파일을 만들지 않고 직접 코딩해서 넣는 것도 가능하다. 이 때 <svg> 태그를 사용한다.`\n      ),\n      progress: codeProcess(\n        `<progress>: 페이지에 진행 상황 막대를 추가하는 태그이다. 예를 들어 <progress value=\"22\" max=\"100\"></progress>와 같이 쓸 경우 22% 진행된 막대가 표시된다`\n      ),\n      picture: codeProcess(\n        `<picture>: 최신 HTML Living Standard에 추가된 이미지 태그로 <audio> 태그와 <video> 태그에 대응한다. 다양한 환경에서 서로 다른 이미지를 띄울 수 있게 한다. W3C HTML 표준에 반영되어 있지 않다.`\n      ),\n    });\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./링크_이미지_관련.vue?vue&type=template&id=b8106288&scoped=true\"\nimport script from \"./링크_이미지_관련.vue?vue&type=script&lang=ts\"\nexport * from \"./링크_이미지_관련.vue?vue&type=script&lang=ts\"\n\nimport \"./링크_이미지_관련.vue?vue&type=style&index=0&id=b8106288&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-b8106288\"\n\nexport default script","<template>\n  <div>HTML</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  setup() {\n    return {};\n  },\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  setup() {\n    return {};\n  },\n});\n","import { render } from \"./HTML.vue?vue&type=template&id=7e6b0920\"\nimport script from \"./HTML.vue?vue&type=script&lang=ts\"\nexport * from \"./HTML.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <code-convert>\n    <template #title> 폼관련</template>\n    <template #content></template>\n    <template #code>{{ 폼관련 }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> input type</template>\n    <template #content>\n      <label for=\"text\">text </label>\n      <input type=\"text\" id=\"text\" /><br />\n      <label for=\"number\">number </label>\n      <input type=\"number\" id=\"number\" /><br />\n      <label for=\"url\">url </label>\n      <input type=\"url\" id=\"url\" /><br />\n      <input type=\"email\" id=\"email\" placeholder=\"myEmail@email.com\" /><br />\n      <label for=\"tel\">tel </label>\n      <input type=\"tel\" id=\"tel\" /><br />\n      <label for=\"search\">search </label>\n      <input type=\"search\" id=\"search\" /><br />\n      <label for=\"range\">range </label>\n      <input type=\"range\" id=\"range\" /><br />\n      <label for=\"color\">color </label>\n      <input type=\"color\" id=\"color\" /><br />\n      <label for=\"date\"> </label>\n      <input type=\"date\" id=\"date\" /><br />\n      <label for=\"time\"> </label>\n      <input type=\"time\" id=\"time\" /><br />\n      <label for=\"datetime\">datetime </label>\n      <input type=\"datetime\" id=\"datetime\" /><br />\n      <!-- checkbox -->\n      <label for=\"checkboxA\">checkboxA </label>\n      <input type=\"checkbox\" id=\"checkboxA\" name=\"checkboxA\" /><br />\n      <label for=\"checkboxB\">checkboxB </label>\n      <input type=\"checkbox\" id=\"checkboxB\" name=\"checkboxB\" /><br />\n      <!-- radio -->\n      <label for=\"radioA\">radioA </label>\n      <input type=\"radio\" id=\"radioA\" name=\"radio\" value=\"radioA\" /><br />\n      <label for=\"radioB\">radioB </label>\n      <input type=\"radio\" id=\"radioB\" name=\"radio\" value=\"radioB\" /><br />\n      <!--  -->\n      <label for=\"button\">button </label>\n      <input type=\"button\" id=\"button\" value=\"button\" /><br />\n      <label for=\"submit\">submit </label>\n      <input type=\"submit\" id=\"submit\" /><br />\n      <label for=\"image\">image </label>\n      <input\n        type=\"image\"\n        src=\"https://res.cloudinary.com/dhdq4v4ar/image/upload/v1633711399/1633339608_gt2nbq.gif\"\n        alt=\"\"\n        id=\"image\"\n        width=\"100\"\n        height=\"100\"\n      /><br />\n      <label for=\"reset\">reset</label>\n      <input type=\"reset\" id=\"reset\" /><br />\n      <label for=\"hidden\">hidden</label>\n      <input type=\"hidden\" id=\"hidden\" /><br />\n      <label for=\"file\">file</label>\n      <input type=\"file\" id=\"file\" /><br />\n    </template>\n    <template #code>{{ 인풋타입 }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> 태그타입</template>\n    <template #content>\n      <textarea id=\"\" cols=\"30\" rows=\"10\"></textarea><br />\n      <button>button</button><br />\n      <output>output</output><br />\n      <select name=\"\" id=\"\">\n        <option value=\"one\">12</option>\n        <option value=\"two\">24</option></select\n      ><br />\n      <fieldset>\n        <legend>그룹제목</legend>\n        <input type=\"text\" value=\"inputText입니당.\" /><br />\n        <input type=\"range\" name=\"\" id=\"\" />\n      </fieldset>\n      <br />\n      <label for=\"\">input 지정</label><br />\n      <!-- datalist 쓰는법 -->\n      <datalist id=\"data-list\">\n        <option value=\"Chocolate\"></option>\n        <option value=\"Coconut\"></option>\n      </datalist>\n      <label for=\"list\">datalist</label>\n      <input list=\"data-list\" id=\"list\" name=\"list\" />\n    </template>\n    <template #code>{{ 태그타입 }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      폼관련: codeProcess(`\n      <form>: 입력값을 받는 영역을 지정한다. 한 페이지에 여러 개가 들어갈 수는 있지만, 영역 안에 영역이 들어가는 것은 불가능하다.\n\n<input>: 입력값 요소를 지정한다. type에 따라 다른 입력값을 취한다\n// input 타입\ninput type :\n\n- text: 한 줄 짜리 문자열 값. 기본값이다.\n\n- number: 숫자.\n\n- url: 도메인 주소.\n\n- email: 이메일.\n\n- tel: 전화번호.\n\n- search: 검색어.\n\n- range: 지정한 범위의 숫자.\n\n- color: 색.\n\n- date: 날짜.\n\n- time: 시각.\n\n- datetime: 날짜+시각.\n\n- checkbox: 선택/해제할 수 있는 항목.\n\n- radio: 선택/해제할 수 있는 항목이나 중복 선택은 불가능하다. 그리고 해당 항목을 선택할 때는 마음대로이나 해제하는 것은 아니다. 이 속성은 하나의 form 태그 영역 내에서 name 속성이 같은 2개 이상의 <input type=\"radio\">가 있을 경우 선택되지 않은 다른 항목을 누르면 이미 선택되어 있는 것이 해제되는 방식으로 동작한다. 따라서 단독으로 써서는 안 되는 속성이다.\n\n- button: 누를 수 있는 버튼을 생성한다.\n\n- submit: 누를 경우 입력값을 전송시키는 버튼을 생성한다.\n\n- image: submit + <img> 태그.\n\n- reset: 누를 경우 입력값을 초기화시키는 버튼을 생성한다.\n\n- hidden: 투명라인(...). 입력값을 수정하지 않고 곧바로 보낼 때 쓰인다. 소스를 열어보지 않으면 사용자에게는 보이지 않는다.[8]\n\n- file: 파일 업로드에 쓰인다.\n\n// 태그 타입\n\n<textarea>: 여러 줄의 문자열 값을 받는다.\n\n<button>: <input type=\"button\">와 대동소이하다. 차이점은 태그 내에도 HTML 지정이 가능해서 표현의 폭이 넓다. type=\"submit\"을 쓰면 <input type=\"submit\">과 같은 기능을 한다.\n\n<output>: input 태그처럼 입력값이지만 수정할 수 없다. 외형상으로는 그냥 문자열.\n\n<datalist>: 검색어에 들어갈 목록을 지정한다.\n\n<select>: 선택 목록.\n    - <option>: 선택 목록에 들어갈 항목. <input type=\"radio\">와 대동소이하다.\n\n<fieldset>: 폼 요소를 그룹으로 묶어준다. 브라우저에는 이 태그 시작부터 끝까지의 모든 요소를 사각형 박스 안에 묶는 방식으로 렌더링된다\n    - <legend>: <fieldset>으로 묶어준 그룹에 제목을 지정해 준다. 브라우저에서는 사각형 박스 왼쪽 상단에 나타난다.\n\n<label>: 해당 요소의 이름을 지정한다. 해당 이름을 클릭하면 요소가 자동으로 선택된다.\n\n      `),\n      인풋타입: codeProcess(`\n      //코드\n      <label for=\"text\">text </label>\n      <input type=\"text\" id=\"text\" />\n\n      <label for=\"number\">number </label>\n      <input type=\"number\" id=\"number\" />\n\n      <label for=\"url\">url </label>\n      <input type=\"url\" id=\"url\" />\n\n      <input type=\"email\" id=\"email\" placeholder=\"myEmail@email.com\" />\n      \n      <label for=\"tel\">tel </label>\n      <input type=\"tel\" id=\"tel\" />\n      \n      <label for=\"search\">search </label>\n      <input type=\"search\" id=\"search\" />\n      \n      <label for=\"range\">range </label>\n      <input type=\"range\" id=\"range\" />\n      \n      <label for=\"color\">color </label>\n      <input type=\"color\" id=\"color\" />\n      \n      <label for=\"date\"> </label>\n      <input type=\"date\" id=\"date\" />\n      \n      <label for=\"time\"> </label>\n      <input type=\"time\" id=\"time\" />\n      \n      <label for=\"datetime\">datetime </label>\n      <input type=\"datetime\" id=\"datetime\" />\n      \n      // <!-- checkbox -->\n      <label for=\"checkboxA\">checkboxA </label>\n      <input type=\"checkbox\" id=\"checkboxA\" name=\"checkboxA\" />\n      <label for=\"checkboxB\">checkboxB </label>\n      <input type=\"checkbox\" id=\"checkboxB\" name=\"checkboxB\" />\n      \n      // <!-- radio -->\n      <label for=\"radioA\">radioA </label>\n      <input type=\"radio\" id=\"radioA\" name=\"radio\" value=\"radioA\" />\n      <label for=\"radioB\">radioB </label>\n      <input type=\"radio\" id=\"radioB\" name=\"radio\" value=\"radioB\" />\n      \n      <label for=\"button\">button </label>\n      <input type=\"button\" id=\"button\" value=\"button\" />\n      \n      <label for=\"submit\">submit </label>\n      <input type=\"submit\" id=\"submit\" />\n      \n      <label for=\"image\">image </label>\n      <input type=\"image\"\n        src=\"https://res.cloudinary.com/dhdq4v4ar/image/upload/v1633711399/1633339608_gt2nbq.gif\"\n        alt=\"\"\n        id=\"image\"\n        width=\"100\"\n        height=\"100\"\n      />\n      \n      <label for=\"reset\">reset</label>\n      <input type=\"reset\" id=\"reset\" />\n      \n      <label for=\"hidden\">hidden</label>\n      <input type=\"hidden\" id=\"hidden\" />\n      \n      <label for=\"file\">file</label>\n      <input type=\"file\" id=\"file\" />\n      `),\n      태그타입: codeProcess(`\n      //코드\n       <textarea id=\"\" cols=\"30\" rows=\"10\"></textarea>\n\n      <button>button</button>\n\n      <output>output</output>\n\n      <select name=\"\" id=\"\">\n        <option value=\"one\">12</option>\n        <option value=\"two\">24</option>\n        </select>\n\n      <fieldset>\n        <legend>그룹제목</legend>\n        <input type=\"text\" value=\"inputText입니당.\" />\n        <input type=\"range\" name=\"\" id=\"\" />\n      </fieldset>      \n      \n\n      <label for=\"\">input 지정</label>\n\n      // <!-- datalist 쓰는법 -->\n      <datalist id=\"data-list\">\n        <option value=\"Chocolate\"></option>\n        <option value=\"Coconut\"></option>\n      </datalist>\n      <label for=\"list\">datalist</label>\n      <input list=\"data-list\" id=\"list\" name=\"list\" />\n\n      `),\n    });\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      폼관련: codeProcess(`\n      <form>: 입력값을 받는 영역을 지정한다. 한 페이지에 여러 개가 들어갈 수는 있지만, 영역 안에 영역이 들어가는 것은 불가능하다.\n\n<input>: 입력값 요소를 지정한다. type에 따라 다른 입력값을 취한다\n// input 타입\ninput type :\n\n- text: 한 줄 짜리 문자열 값. 기본값이다.\n\n- number: 숫자.\n\n- url: 도메인 주소.\n\n- email: 이메일.\n\n- tel: 전화번호.\n\n- search: 검색어.\n\n- range: 지정한 범위의 숫자.\n\n- color: 색.\n\n- date: 날짜.\n\n- time: 시각.\n\n- datetime: 날짜+시각.\n\n- checkbox: 선택/해제할 수 있는 항목.\n\n- radio: 선택/해제할 수 있는 항목이나 중복 선택은 불가능하다. 그리고 해당 항목을 선택할 때는 마음대로이나 해제하는 것은 아니다. 이 속성은 하나의 form 태그 영역 내에서 name 속성이 같은 2개 이상의 <input type=\"radio\">가 있을 경우 선택되지 않은 다른 항목을 누르면 이미 선택되어 있는 것이 해제되는 방식으로 동작한다. 따라서 단독으로 써서는 안 되는 속성이다.\n\n- button: 누를 수 있는 버튼을 생성한다.\n\n- submit: 누를 경우 입력값을 전송시키는 버튼을 생성한다.\n\n- image: submit + <img> 태그.\n\n- reset: 누를 경우 입력값을 초기화시키는 버튼을 생성한다.\n\n- hidden: 투명라인(...). 입력값을 수정하지 않고 곧바로 보낼 때 쓰인다. 소스를 열어보지 않으면 사용자에게는 보이지 않는다.[8]\n\n- file: 파일 업로드에 쓰인다.\n\n// 태그 타입\n\n<textarea>: 여러 줄의 문자열 값을 받는다.\n\n<button>: <input type=\"button\">와 대동소이하다. 차이점은 태그 내에도 HTML 지정이 가능해서 표현의 폭이 넓다. type=\"submit\"을 쓰면 <input type=\"submit\">과 같은 기능을 한다.\n\n<output>: input 태그처럼 입력값이지만 수정할 수 없다. 외형상으로는 그냥 문자열.\n\n<datalist>: 검색어에 들어갈 목록을 지정한다.\n\n<select>: 선택 목록.\n    - <option>: 선택 목록에 들어갈 항목. <input type=\"radio\">와 대동소이하다.\n\n<fieldset>: 폼 요소를 그룹으로 묶어준다. 브라우저에는 이 태그 시작부터 끝까지의 모든 요소를 사각형 박스 안에 묶는 방식으로 렌더링된다\n    - <legend>: <fieldset>으로 묶어준 그룹에 제목을 지정해 준다. 브라우저에서는 사각형 박스 왼쪽 상단에 나타난다.\n\n<label>: 해당 요소의 이름을 지정한다. 해당 이름을 클릭하면 요소가 자동으로 선택된다.\n\n      `),\n      인풋타입: codeProcess(`\n      //코드\n      <label for=\"text\">text </label>\n      <input type=\"text\" id=\"text\" />\n\n      <label for=\"number\">number </label>\n      <input type=\"number\" id=\"number\" />\n\n      <label for=\"url\">url </label>\n      <input type=\"url\" id=\"url\" />\n\n      <input type=\"email\" id=\"email\" placeholder=\"myEmail@email.com\" />\n      \n      <label for=\"tel\">tel </label>\n      <input type=\"tel\" id=\"tel\" />\n      \n      <label for=\"search\">search </label>\n      <input type=\"search\" id=\"search\" />\n      \n      <label for=\"range\">range </label>\n      <input type=\"range\" id=\"range\" />\n      \n      <label for=\"color\">color </label>\n      <input type=\"color\" id=\"color\" />\n      \n      <label for=\"date\"> </label>\n      <input type=\"date\" id=\"date\" />\n      \n      <label for=\"time\"> </label>\n      <input type=\"time\" id=\"time\" />\n      \n      <label for=\"datetime\">datetime </label>\n      <input type=\"datetime\" id=\"datetime\" />\n      \n      // <!-- checkbox -->\n      <label for=\"checkboxA\">checkboxA </label>\n      <input type=\"checkbox\" id=\"checkboxA\" name=\"checkboxA\" />\n      <label for=\"checkboxB\">checkboxB </label>\n      <input type=\"checkbox\" id=\"checkboxB\" name=\"checkboxB\" />\n      \n      // <!-- radio -->\n      <label for=\"radioA\">radioA </label>\n      <input type=\"radio\" id=\"radioA\" name=\"radio\" value=\"radioA\" />\n      <label for=\"radioB\">radioB </label>\n      <input type=\"radio\" id=\"radioB\" name=\"radio\" value=\"radioB\" />\n      \n      <label for=\"button\">button </label>\n      <input type=\"button\" id=\"button\" value=\"button\" />\n      \n      <label for=\"submit\">submit </label>\n      <input type=\"submit\" id=\"submit\" />\n      \n      <label for=\"image\">image </label>\n      <input type=\"image\"\n        src=\"https://res.cloudinary.com/dhdq4v4ar/image/upload/v1633711399/1633339608_gt2nbq.gif\"\n        alt=\"\"\n        id=\"image\"\n        width=\"100\"\n        height=\"100\"\n      />\n      \n      <label for=\"reset\">reset</label>\n      <input type=\"reset\" id=\"reset\" />\n      \n      <label for=\"hidden\">hidden</label>\n      <input type=\"hidden\" id=\"hidden\" />\n      \n      <label for=\"file\">file</label>\n      <input type=\"file\" id=\"file\" />\n      `),\n      태그타입: codeProcess(`\n      //코드\n       <textarea id=\"\" cols=\"30\" rows=\"10\"></textarea>\n\n      <button>button</button>\n\n      <output>output</output>\n\n      <select name=\"\" id=\"\">\n        <option value=\"one\">12</option>\n        <option value=\"two\">24</option>\n        </select>\n\n      <fieldset>\n        <legend>그룹제목</legend>\n        <input type=\"text\" value=\"inputText입니당.\" />\n        <input type=\"range\" name=\"\" id=\"\" />\n      </fieldset>      \n      \n\n      <label for=\"\">input 지정</label>\n\n      // <!-- datalist 쓰는법 -->\n      <datalist id=\"data-list\">\n        <option value=\"Chocolate\"></option>\n        <option value=\"Coconut\"></option>\n      </datalist>\n      <label for=\"list\">datalist</label>\n      <input list=\"data-list\" id=\"list\" name=\"list\" />\n\n      `),\n    });\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./폼관련.vue?vue&type=template&id=51f6ade5\"\nimport script from \"./폼관련.vue?vue&type=script&lang=ts\"\nexport * from \"./폼관련.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}