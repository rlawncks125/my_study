{"version":3,"sources":["webpack:///./src/views/SCSS-views/조건문_반복문.vue","webpack:///./src/views/SCSS-views/조건문_반복문.vue?a0b6","webpack:///./src/views/SCSS-views/조건문_반복문.vue?2aaf"],"names":["class","items","item","key","id","title","content","code","setup","render"],"mappings":"yIACE,eAAiC,MAA7BA,MAAM,YAAW,WAAO,G,EAC5B,eAAM,mB,EACN,eAAM,mB,iHAFN,EACA,EACA,G,mBACA,eAMM,2BANc,EAAAC,OAAK,SAAbC,G,wBAAZ,eAMM,OANsBC,IAAKD,EAAKE,I,CACpC,eAIe,QAHFC,MAAK,gBAAC,iBAAgB,C,8BAAbH,EAAKG,OAAK,OACnBC,QAAO,gBAAC,iBAAkB,C,8BAAfJ,EAAKI,SAAO,OACvBC,KAAI,gBAAC,iBAAe,C,8BAAZL,EAAKK,MAAI,O,2CCJnB,iBAAgB,CAC7BC,MAD6B,WAE3B,IAAMP,EAAQ,eAAS,CACrB,CACEI,MAAO,KACPE,KAAM,eAAY,qIAOpB,CACEF,MAAO,eACPE,KAAM,eAAY,2VAuBpB,CACEF,MAAO,MACPE,KAAM,eAAY,ixBAmCpB,CACEF,MAAO,OACPE,KAAM,eAAY,yOAYpB,CACEF,MAAO,QACPE,KAAM,eAAY,gDAKtB,MAAO,CAAEN,YChGb,EAAOQ,OAASA,EAED","file":"js/chunk-2d0c1cdf.5e3c3182.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">조건문 반복문</h1>\n  <hr />\n  <br />\n  <div v-for=\"item in items\" :key=\"item.id\">\n    <code-convert>\n      <template #title>{{ item.title }} </template>\n      <template #content>{{ item.content }}</template>\n      <template #code>{{ item.code }} </template>\n    </code-convert>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"if\",\n        code: codeProcess(`---- if(조건 , ture , false)\n\n      div{\n        $width : 300px;\n        width : if($width > 200px , $width , 100px);\n      }`),\n      },\n      {\n        title: \"if ~ else if\",\n        code: codeProcess(`---- @if (조건1){\n\n---- } @else if (조건2) {\n\n---- }@else {\n\n---- }\n\n$color : red ;\n\n      div{\n        /tt@if $color == orange {\n        /tt/ttcolor : #FE9A2E;\n        /tt}\n        /tt@else if $color == banana {\n        /tt/ttcolor : $FFFFFF;\n        /tt}\n        /tt@ else {\n        /tt/ttcolor : red;\n        /tt}\n      }\n`),\n      },\n      {\n        title: \"for\",\n        code: codeProcess(` // 종료 만큼 반복 ( through )\n      ----@for $변수 from 시작 through 종료 {\n        // ...\n      }\n\n      // 종료 진적까지 반복 ( to )\n      ----@for $변수 from 시작 to 종료 {\n        // ...\n      }\n      \n     // 결과 :\n\n      // 1부터 3번 반복\n      ----@for $i from 1 through 3 {\n      /tt#through:nth-child(#{$i}) {\n      /tt/ttwidth : 20px * $i\n      /tt}\n      }\n\n      // 1부터 3 직전까지만 반복(2번 반복)\n      ----@for $i from 1 to 3 {\n      /tt#to:nth-child(#{$i}) {\n      /tt/ttwidth : 20px * $i\n      /tt}\n      }\n\n      // for 결과\n      ----#through:nth-child(1) { width: 20px; }\n      ----#through:nth-child(2) { width: 40px; }\n      ----#through:nth-child(3) { width: 60px; }\n      \n      ----#to:nth-child(1) { width: 20px; }\n      ----#to:nth-child(2) { width: 40px; }\n      `),\n      },\n      {\n        title: \"each\",\n        code: codeProcess(`// List 와 Map을 반복할떄 사용\n      @each $변수 in 데이터 {\n        //...\n      }\n\n      ---- // list타입\n      @each $변수 in List타입 {}\n      @each $변수,... in List타입,... {}\n\n      ---- // map타입\n      @each $key변수 , $value변수 in 데이터 {}`),\n      },\n      {\n        title: \"while\",\n        code: codeProcess(`@while 조건 {\n            //...\n        }`),\n      },\n    ]);\n    return { items };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"if\",\n        code: codeProcess(`---- if(조건 , ture , false)\n\n      div{\n        $width : 300px;\n        width : if($width > 200px , $width , 100px);\n      }`),\n      },\n      {\n        title: \"if ~ else if\",\n        code: codeProcess(`---- @if (조건1){\n\n---- } @else if (조건2) {\n\n---- }@else {\n\n---- }\n\n$color : red ;\n\n      div{\n        /tt@if $color == orange {\n        /tt/ttcolor : #FE9A2E;\n        /tt}\n        /tt@else if $color == banana {\n        /tt/ttcolor : $FFFFFF;\n        /tt}\n        /tt@ else {\n        /tt/ttcolor : red;\n        /tt}\n      }\n`),\n      },\n      {\n        title: \"for\",\n        code: codeProcess(` // 종료 만큼 반복 ( through )\n      ----@for $변수 from 시작 through 종료 {\n        // ...\n      }\n\n      // 종료 진적까지 반복 ( to )\n      ----@for $변수 from 시작 to 종료 {\n        // ...\n      }\n      \n     // 결과 :\n\n      // 1부터 3번 반복\n      ----@for $i from 1 through 3 {\n      /tt#through:nth-child(#{$i}) {\n      /tt/ttwidth : 20px * $i\n      /tt}\n      }\n\n      // 1부터 3 직전까지만 반복(2번 반복)\n      ----@for $i from 1 to 3 {\n      /tt#to:nth-child(#{$i}) {\n      /tt/ttwidth : 20px * $i\n      /tt}\n      }\n\n      // for 결과\n      ----#through:nth-child(1) { width: 20px; }\n      ----#through:nth-child(2) { width: 40px; }\n      ----#through:nth-child(3) { width: 60px; }\n      \n      ----#to:nth-child(1) { width: 20px; }\n      ----#to:nth-child(2) { width: 40px; }\n      `),\n      },\n      {\n        title: \"each\",\n        code: codeProcess(`// List 와 Map을 반복할떄 사용\n      @each $변수 in 데이터 {\n        //...\n      }\n\n      ---- // list타입\n      @each $변수 in List타입 {}\n      @each $변수,... in List타입,... {}\n\n      ---- // map타입\n      @each $key변수 , $value변수 in 데이터 {}`),\n      },\n      {\n        title: \"while\",\n        code: codeProcess(`@while 조건 {\n            //...\n        }`),\n      },\n    ]);\n    return { items };\n  },\n});\n","import { render } from \"./조건문_반복문.vue?vue&type=template&id=21b139db\"\nimport script from \"./조건문_반복문.vue?vue&type=script&lang=ts\"\nexport * from \"./조건문_반복문.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}