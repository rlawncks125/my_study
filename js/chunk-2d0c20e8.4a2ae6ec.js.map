{"version":3,"sources":["webpack:///./src/views/SCSS-views/데이터.vue","webpack:///./src/views/SCSS-views/데이터.vue?b90d","webpack:///./src/views/SCSS-views/데이터.vue?32eb"],"names":["class","items","item","key","id","title","code","content","components","setup","render"],"mappings":"2IACE,eAAkC,MAA9BA,MAAM,YAAW,YAAQ,G,EAC7B,eAAM,mB,EACN,eAAM,mB,iIAFN,EACA,EACA,G,mBACA,eAQM,2BARc,EAAAC,OAAK,SAAbC,G,wBAAZ,eAQM,OARsBC,IAAKD,EAAKE,I,CACpC,eAMe,uBALFC,MAAK,gBAAC,iBAAgB,C,8BAAbH,EAAKG,OAAK,OAInBC,KAAI,gBAAC,iBAAe,C,8BAAZJ,EAAKI,MAAI,O,MAHZJ,EAAKK,Q,MAAU,U,mBAC7B,iBAA6B,CAA7B,eAA6B,OAAxB,UAAQL,EAAKK,S,8DCJX,iBAAgB,CAC7BC,WAAY,GACZC,MAF6B,WAG3B,IAAMR,EAAQ,eAAS,CACrB,CACEI,MAAO,SACPC,KAAM,eAAY,4fAepB,CACED,MAAO,KACPC,KAAM,eAAY,06BA4CpB,CACED,MAAO,KACPC,KAAM,eAAY,q7BAmDtB,MAAO,CAAEL,YCzHb,EAAOS,OAASA,EAED","file":"js/chunk-2d0c20e8.4a2ae6ec.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">SCSS 데이터</h1>\n  <hr />\n  <br />\n  <div v-for=\"item in items\" :key=\"item.id\">\n    <code-convert>\n      <template #title>{{ item.title }} </template>\n      <template v-if=\"item.content\" #content>\n        <div v-html=\"item.content\" />\n      </template>\n      <template #code>{{ item.code }} </template>\n    </code-convert>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  components: {},\n  setup() {\n    const items = reactive([\n      {\n        title: \"데이터 종류\",\n        code: codeProcess(`---- Number : 숫자\n      /tt/tt/ttex) 1, .02 , 10px , 1rem ···\n      ---- String : 문자\n      /tt/tt/ttex) bold , flex , \"/images/a.png\" , \"string\"\n      ---- Colors : 색상 표현\n      /tt/tt/ttex) red , blue , #FFFFFF , rgba(255,255,255,1)\n      ---- Boolean : 논리\n      /tt/tt/ttex) true, false\n      ---- Null : null\n\n      ---- List : 공백이나 ',' 로 구분된 값의 목록\n      /tt/tt/ttex) (ab,bc,cd) , ab bc cd\n      ---- Map :  List와 유사하나 Key:Value 형태\n      /tt/tt/ttex) (ab : first , bc : two , cd : three)`),\n      },\n      {\n        title: \"변수\",\n        code: codeProcess(`\n       // $변수이름 : 값;\n      \n       $color-primary : #e030300;\n      $image : \"/assets/images/\";\n      $w : 200px;\n\n      .box{\n        /ttwidth : $w;\n        /ttcolor : $color-primary;\n        /ttbackgorund-image : url($images + 'bg.jpg')\n      }\n\n      // 재할당 \n      $red : $FF0000;\n\n      $color-primary : $red;\n\n      //전역 설정 : !global\n      .box1{\n      /tt$color: #ffffff !global;\n      /ttbackground: $color;\n      }\n      .box2 {\n      /ttbackground : $color\n      }\n\n      // 초기값 설정 : !default\n      // 기존의 변수가 있다면 기존 값을 할당\n      .box {\n      /tt$color-primary : yellow !default;\n      }\n\n      // #{} 문자보간 \n      // #{} 문자보간 = $ {변수}와 활용 같음\n      $family: unquote(\"Droid+Sans\");\n      @import url(\"http://fonts.googleapis.com/css?family=#{$family}\"); \n\n\n      // @use 사용시 Praviate member 생성가능\n      // underscore ( _ ) or Hyphen ( - ) 를 사용\n      $_border : 1px solid #fff;\n      `),\n      },\n      {\n        title: \"연산\",\n        code: codeProcess(`산술 : \n      + : 더하기\n      = : 빼기\n      * : 곱하기 = 하나 이상의 값이 반드시 숫자\n      / : 나누기 = 오른쪽 값이 반드시 숫자\n      % : 나머지\n\n      비교 : \n      == : 동등\n      != : 부등\n      <\n      >\n      <=\n      >=\n\n      논리 :\n      and\n      or\n      not\n\n      // 숫자 \n      // 상대적 단위(%,em,vw) 시 calc()함수 이용\n      상대적 단위 연산시 :\n      width : 50% - 5px; // 에러\n      width : calc(50% - 5px) // 연산 가능\n\n      나누기 연산시 :\n      $w : 100px;\n      width : $w / 4;\n      height : (100px / 2);\n      font-size : 10px + 12px / 3;\n\n      // 문자\n      // 첫번째 연산자에 따라 따옴표 처리가됨\n      content : \"hello \" + World; // \"Hello World\";\n      content : row + \"-reverse\" + \" \" + wrap; // row-reverse wrap;\n      \n\n      // color\n      color : #123456 + #31456; \n      color : rgba(50,50,50,.2) + rgba(10,20,30,.3);\n\n      // 논리\n      $width : 80px;\n      div{\n        /tt@if not ($width > 100px){\n          /tt/ttheight : 200px;\n        /tt}\n      }`),\n      },\n    ]);\n    return { items };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  components: {},\n  setup() {\n    const items = reactive([\n      {\n        title: \"데이터 종류\",\n        code: codeProcess(`---- Number : 숫자\n      /tt/tt/ttex) 1, .02 , 10px , 1rem ···\n      ---- String : 문자\n      /tt/tt/ttex) bold , flex , \"/images/a.png\" , \"string\"\n      ---- Colors : 색상 표현\n      /tt/tt/ttex) red , blue , #FFFFFF , rgba(255,255,255,1)\n      ---- Boolean : 논리\n      /tt/tt/ttex) true, false\n      ---- Null : null\n\n      ---- List : 공백이나 ',' 로 구분된 값의 목록\n      /tt/tt/ttex) (ab,bc,cd) , ab bc cd\n      ---- Map :  List와 유사하나 Key:Value 형태\n      /tt/tt/ttex) (ab : first , bc : two , cd : three)`),\n      },\n      {\n        title: \"변수\",\n        code: codeProcess(`\n       // $변수이름 : 값;\n      \n       $color-primary : #e030300;\n      $image : \"/assets/images/\";\n      $w : 200px;\n\n      .box{\n        /ttwidth : $w;\n        /ttcolor : $color-primary;\n        /ttbackgorund-image : url($images + 'bg.jpg')\n      }\n\n      // 재할당 \n      $red : $FF0000;\n\n      $color-primary : $red;\n\n      //전역 설정 : !global\n      .box1{\n      /tt$color: #ffffff !global;\n      /ttbackground: $color;\n      }\n      .box2 {\n      /ttbackground : $color\n      }\n\n      // 초기값 설정 : !default\n      // 기존의 변수가 있다면 기존 값을 할당\n      .box {\n      /tt$color-primary : yellow !default;\n      }\n\n      // #{} 문자보간 \n      // #{} 문자보간 = $ {변수}와 활용 같음\n      $family: unquote(\"Droid+Sans\");\n      @import url(\"http://fonts.googleapis.com/css?family=#{$family}\"); \n\n\n      // @use 사용시 Praviate member 생성가능\n      // underscore ( _ ) or Hyphen ( - ) 를 사용\n      $_border : 1px solid #fff;\n      `),\n      },\n      {\n        title: \"연산\",\n        code: codeProcess(`산술 : \n      + : 더하기\n      = : 빼기\n      * : 곱하기 = 하나 이상의 값이 반드시 숫자\n      / : 나누기 = 오른쪽 값이 반드시 숫자\n      % : 나머지\n\n      비교 : \n      == : 동등\n      != : 부등\n      <\n      >\n      <=\n      >=\n\n      논리 :\n      and\n      or\n      not\n\n      // 숫자 \n      // 상대적 단위(%,em,vw) 시 calc()함수 이용\n      상대적 단위 연산시 :\n      width : 50% - 5px; // 에러\n      width : calc(50% - 5px) // 연산 가능\n\n      나누기 연산시 :\n      $w : 100px;\n      width : $w / 4;\n      height : (100px / 2);\n      font-size : 10px + 12px / 3;\n\n      // 문자\n      // 첫번째 연산자에 따라 따옴표 처리가됨\n      content : \"hello \" + World; // \"Hello World\";\n      content : row + \"-reverse\" + \" \" + wrap; // row-reverse wrap;\n      \n\n      // color\n      color : #123456 + #31456; \n      color : rgba(50,50,50,.2) + rgba(10,20,30,.3);\n\n      // 논리\n      $width : 80px;\n      div{\n        /tt@if not ($width > 100px){\n          /tt/ttheight : 200px;\n        /tt}\n      }`),\n      },\n    ]);\n    return { items };\n  },\n});\n","import { render } from \"./데이터.vue?vue&type=template&id=0801b93c\"\nimport script from \"./데이터.vue?vue&type=script&lang=ts\"\nexport * from \"./데이터.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}