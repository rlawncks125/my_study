(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0cedbb"],{"60f1":function(n,e,t){"use strict";t.r(e);t("4de4");var c=t("7a23"),r=Object(c["f"])("h1",{class:"div-line"},"CSS 함수",-1),a=Object(c["f"])("hr",null,null,-1),b=Object(c["f"])("br",null,null,-1),i=Object(c["f"])("div",null,null,-1),l=Object(c["h"])(" Transform 함수"),j=Object(c["h"])(" Math 함수"),O=Object(c["h"])("filter 함수 "),u=Object(c["h"])("color 함수 "),o=Object(c["h"])("image 함수 "),d=Object(c["h"])("도형 함수 "),s=Object(c["h"])("잘안쓸거같음");function f(n,e,t,f,h,g){var p=Object(c["D"])("code-convert");return Object(c["v"])(),Object(c["e"])(c["a"],null,[r,a,b,i,Object(c["i"])(p,null,{title:Object(c["L"])((function(){return[l]})),code:Object(c["L"])((function(){return[Object(c["h"])(Object(c["G"])(n.transForm),1)]})),_:1}),Object(c["i"])(p,null,{title:Object(c["L"])((function(){return[j]})),code:Object(c["L"])((function(){return[Object(c["h"])(Object(c["G"])(n.math),1)]})),_:1}),Object(c["i"])(p,null,{title:Object(c["L"])((function(){return[O]})),code:Object(c["L"])((function(){return[Object(c["h"])(Object(c["G"])(n.filter),1)]})),_:1}),Object(c["i"])(p,null,{title:Object(c["L"])((function(){return[u]})),code:Object(c["L"])((function(){return[Object(c["h"])(Object(c["G"])(n.color),1)]})),_:1}),Object(c["i"])(p,null,{title:Object(c["L"])((function(){return[o]})),code:Object(c["L"])((function(){return[Object(c["h"])(Object(c["G"])(n.image),1)]})),_:1}),Object(c["i"])(p,null,{title:Object(c["L"])((function(){return[d]})),content:Object(c["L"])((function(){return[s]})),code:Object(c["L"])((function(){return[Object(c["h"])(Object(c["G"])(n.Shape),1)]})),_:1})],64)}var h=t("5530"),g=t("dd39"),p=Object(c["j"])({setup:function(){var n=Object(c["z"])({transForm:Object(g["a"])("matrix() : 2D 변환 행렬 정의 matrix( scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY() )\n\n        perspective() : 사이의 거리를 설정하는 변환을 구체화함\n\n        rotate() : 회전하는 변환을 정의\n\n        scale() : 크기를 조정하는 변환을 정의\n\n        skew() : 비스듬히 움직이는 변환을 정의\n\n        translate() : 수평/수직 으로 위치시킨다."),math:Object(g["a"])("calc() : 사직 계삭을 수행\n\n        max() : 제일 큰값 적용\n\n        min() : 제일 작은값 적용\n\n        abs() : 절대값으로 반환\n\n        sign() : 양수일경우 1 음수일경우 -1 , 0일경우 0을 반환"),filter:Object(g["a"])("blur() : 이미지에 흐림을 적용\n\n    brightness() : 이미지의 밝기를 적용\n\n    contrast() : 이미지의 대비를 조정\n\n    drop-shadow() : 이미지에 새도우 효과를 적용\n\n    grayscale() : 회색 이미지 정도를 적용\n\n    hue-rotate() : 색상의 내용을 회전 = 색바뀜\n\n    invert() : 색상을 반전 시킴\n\n    opacity() : 투명성을 적용\n\n    saturate() : 이미지를 과포화 시키거나 불포화시킴\n\n    sepia() : 노란/갈색 으로 보이게 하는 정도"),color:Object(g["a"])("hsl[a]() : H = 색상(r=0deg=360deg,b=240deg,g=120deg) , S = 포화도 , L = 백분율 , A = 투명성\n\n    rgb[a]() : r = red , g = green , b = blue , a = 투명성\n    "),image:Object(g["a"])("conic-gradient() : 중앙점 기준으로 색전환이 회전하는 그라데이션\n\n    linear-gradient() : 직선을 따라 둘 이상의 색상 사이에서 점진적인 전환으로 구성된 이미지\n\n    radial-gradient() : 원점에서 방사되어 원또는 타원일수있다. 두개 이상의 생상 사이의 점진적인 전환으로 구성된 이미지\n\n    repeating-linear-gradient() : 반복적인 선형 그라데이션\n\n    repeating-radial-gradient() : 원점에서 방사되어 반복적인 그라데이션\n\n    repeating-conic-gradient() : 중심점을 중심으로 반복적으로 회전하는 그라데이션"),Shape:Object(g["a"])("circle()\n    ellipse()\n    inset()\n    polygon()")});return Object(h["a"])({},Object(c["H"])(n))}}),L=t("d959"),m=t.n(L);const v=m()(p,[["render",f]]);e["default"]=v}}]);
//# sourceMappingURL=chunk-2d0cedbb.df01b2cd.js.map