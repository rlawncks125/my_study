{"version":3,"sources":["webpack:///./src/views/VUE-views/DOM접근.vue","webpack:///./src/views/VUE-views/DOM접근.vue?2cb6","webpack:///./src/views/VUE-views/DOM접근.vue?32c1"],"names":["class","ref","items","item","key","id","title","content","code","arrayItems","setItemRef","setup","elRef","arrayRef","el","push","console","log","value","render"],"mappings":"yIACE,eAAgC,MAA5BA,MAAM,YAAW,UAAM,G,EAC3B,eAAM,mB,EACN,eAAM,mB,GAQHC,IAAI,S,iHAVP,EACA,EACA,G,mBACA,eAMM,2BANc,EAAAC,OAAK,SAAbC,G,wBAAZ,eAMM,OANsBC,IAAKD,EAAKE,I,CACpC,eAIe,QAHFC,MAAK,gBAAC,iBAAgB,C,8BAAbH,EAAKG,OAAK,OACnBC,QAAO,gBAAC,iBAAkB,C,8BAAfJ,EAAKI,SAAO,OACvBC,KAAI,gBAAC,iBAAe,C,8BAAZL,EAAKK,MAAI,O,sBAGhC,eAA4B,IAA5B,EAAe,YAAS,M,mBACxB,eAEM,2BAFc,EAAAC,YAAU,SAAlBN,G,wBAAZ,eAEM,OAF2BC,IAAKD,EAAKE,GAAKJ,IAAK,EAAAS,Y,eAChDP,GAAI,Q,2BCTI,iBAAgB,CAC7BQ,MAD6B,WAE3B,IAAMT,EAAQ,eAAS,CACrB,CACEI,MAAO,eACPE,KAAM,eAAY,2GAMpB,CACEF,MAAO,eACPE,KAAM,eAAY,gXAehBI,EAAQ,iBAERH,EAAa,CAAC,QAAS,QAAS,OAAQ,QACxCI,EAAW,eAAwB,IACnCH,EAAa,SAACI,GAClBD,EAASE,KAAKD,IAOhB,OALA,gBAAU,WACRE,QAAQC,IAAI,KAAML,EAAMM,OACxBF,QAAQC,IAAI,KAAMJ,MAGb,CAAEX,QAAOO,aAAYC,aAAYE,YCzC5C,EAAOO,OAASA,EAED","file":"js/chunk-2d217c8a.c1666bc8.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">DOM 접근</h1>\n  <hr />\n  <br />\n  <div v-for=\"item in items\" :key=\"item.id\">\n    <code-convert>\n      <template #title>{{ item.title }} </template>\n      <template #content>{{ item.content }}</template>\n      <template #code>{{ item.code }} </template>\n    </code-convert>\n  </div>\n  <p ref=\"elRef\">단일 Elemnt</p>\n  <div v-for=\"item in arrayItems\" :key=\"item.id\" :ref=\"setItemRef\">\n    {{ item }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, reactive, ref } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"단일 Elemnt 접근\",\n        code: codeProcess(`\n         <p ref=\"elRef\">단일 Elemnt</p>\n        \n        const elRef = ref<HTMLElement>();\n        `),\n      },\n      {\n        title: \"복수 Elemnt 접근\",\n        code: codeProcess(`\n        <div v-for=\"item in arrayItems\" :key=\"item.id\" :ref=\"setItemRef\">\n    {{ item }}\n  </div>\n\n        const arrayItems = [\"AAAAA\", \"BBBBB\", \"CCCC\", \"DDDD\"];\n    const arrayRef = reactive<HTMLElement[]>([]);\n    // function을 이용하여 각각의 Element를 배열에 push 해준다\n    const setItemRef = (el: HTMLElement) => {\n      /ttarrayRef.push(el);\n    };\n        `),\n      },\n    ]);\n    // 단일\n    const elRef = ref<HTMLElement>();\n    // 배열\n    const arrayItems = [\"AAAAA\", \"BBBBB\", \"CCCC\", \"DDDD\"];\n    const arrayRef = reactive<HTMLElement[]>([]);\n    const setItemRef = (el: HTMLElement) => {\n      arrayRef.push(el);\n    };\n    onMounted(() => {\n      console.log(\"단일\", elRef.value);\n      console.log(\"배열\", arrayRef);\n    });\n\n    return { items, arrayItems, setItemRef, elRef };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, onMounted, reactive, ref } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"단일 Elemnt 접근\",\n        code: codeProcess(`\n         <p ref=\"elRef\">단일 Elemnt</p>\n        \n        const elRef = ref<HTMLElement>();\n        `),\n      },\n      {\n        title: \"복수 Elemnt 접근\",\n        code: codeProcess(`\n        <div v-for=\"item in arrayItems\" :key=\"item.id\" :ref=\"setItemRef\">\n    {{ item }}\n  </div>\n\n        const arrayItems = [\"AAAAA\", \"BBBBB\", \"CCCC\", \"DDDD\"];\n    const arrayRef = reactive<HTMLElement[]>([]);\n    // function을 이용하여 각각의 Element를 배열에 push 해준다\n    const setItemRef = (el: HTMLElement) => {\n      /ttarrayRef.push(el);\n    };\n        `),\n      },\n    ]);\n    // 단일\n    const elRef = ref<HTMLElement>();\n    // 배열\n    const arrayItems = [\"AAAAA\", \"BBBBB\", \"CCCC\", \"DDDD\"];\n    const arrayRef = reactive<HTMLElement[]>([]);\n    const setItemRef = (el: HTMLElement) => {\n      arrayRef.push(el);\n    };\n    onMounted(() => {\n      console.log(\"단일\", elRef.value);\n      console.log(\"배열\", arrayRef);\n    });\n\n    return { items, arrayItems, setItemRef, elRef };\n  },\n});\n","import { render } from \"./DOM접근.vue?vue&type=template&id=02d9f6ab\"\nimport script from \"./DOM접근.vue?vue&type=script&lang=ts\"\nexport * from \"./DOM접근.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}