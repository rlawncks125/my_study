{"version":3,"sources":["webpack:///./src/views/SCSS-views/media쿼리.vue","webpack:///./src/views/SCSS-views/media쿼리.vue?7094","webpack:///./src/views/SCSS-views/media쿼리.vue?72fc"],"names":["class","items","item","key","id","title","content","code","setup","render"],"mappings":"yIACE,eAAoC,MAAhCA,MAAM,YAAW,cAAU,G,EAC/B,eAAM,mB,EACN,eAAM,mB,iHAFN,EACA,EACA,G,mBACA,eAMM,2BANc,EAAAC,OAAK,SAAbC,G,wBAAZ,eAMM,OANsBC,IAAKD,EAAKE,I,CACpC,eAIe,QAHFC,MAAK,gBAAC,iBAAgB,C,8BAAbH,EAAKG,OAAK,OACnBC,QAAO,gBAAC,iBAAkB,C,8BAAfJ,EAAKI,SAAO,OACvBC,KAAI,gBAAC,iBAAe,C,8BAAZL,EAAKK,MAAI,O,2CCJnB,iBAAgB,CAC7BC,MAD6B,WAE3B,IAAMP,EAAQ,eAAS,CACrB,CACEI,MAAO,OACPE,KAAM,eAAY,4GAKpB,CACEF,MAAO,aACPE,KAAM,eAAY,2SAepB,CACEF,MAAO,oBACPE,KAAM,eAAY,o7BAwCpB,CACEF,MAAO,yBACPE,KAAM,eAAY,kVAgBtB,MAAO,CAAEN,YCxFb,EAAOQ,OAASA,EAED","file":"js/chunk-2d21a5f5.29df3091.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">SCSS 미디어쿼리</h1>\n  <hr />\n  <br />\n  <div v-for=\"item in items\" :key=\"item.id\">\n    <code-convert>\n      <template #title>{{ item.title }} </template>\n      <template #content>{{ item.content }}</template>\n      <template #code>{{ item.code }} </template>\n    </code-convert>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"미디어 \",\n        code: codeProcess(`all : 모든 장치\n    print : 인쇄 결과물 및 출력 미리보기 화면에 표시 중인 문서\n    screen : 주로 화면이 새당\n    speech : 음성 합성장치 대상`),\n      },\n      {\n        title: \"내가 쓰는 기본구조\",\n        code: codeProcess(`@media (max-width: 400px) {\n    /ttcontent: \"mobile\";\n    /ttcolor: red;\n    }\n\n    @media (min-width: 400px) {\n        /ttcontent: \"doublephon\";\n        /ttcolor: goldenrod;\n    }\n    \n    @media (min-width: 700px) {\n        /ttcontent: \"table\";\n        /ttcolor: green;\n        }`),\n      },\n      {\n        title: \"Mixins을 사용한 미디어쿼리\",\n        code: codeProcess(`$screen: (\n  /ttxs: 475px,\n  /ttsm: 640px,\n  /ttmd: 768px,\n  /ttlg: 1024px,\n  /ttxl: 1280px,\n  /ttxxl: 1536px,\n);\n\n@mixin xs {\n  /tt----@media (min-width: 0) and (max-width: map-get($screen,xs)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin sm {\n  /tt----@media (min-width: calc(map-get($screen,xs) + 1px)) and (max-width: map-get($screen,sm)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin md {\n  /tt----@media (min-width: calc(map-get($screen,sm) + 1px)) and (max-width: map-get($screen,md)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin lg {\n  /tt----@media (min-width: calc(map-get($screen,md) + 1px)) and (max-width: map-get($screen,lg)) {\n   /tt/tt@content();\n  /tt}\n}\n@mixin xl {\n  /tt----@media (min-width: calc(map-get($screen,lg) + 1px)) and (max-width: map-get($screen,xl)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin xxl {\n  /tt----@media (min-width: calc(map-get($screen,xl) + 1px)) {\n    /tt/tt@content();\n  /tt}\n}`),\n      },\n      {\n        title: \"Mixins 사용 = include() \",\n        code: codeProcess(`\n          @include 믹스인 이름;\n          @include 믹스인 이름(인수);\n          // 변수 키워드 할당\n          @include 믹스인 이름($매개변수 : 인수);\n\n            // ex)\n            .box {\n                /ttdisplay : none;\n                /tt@icnlude md(){\n                    /tt/ttdisplay: \"block\";\n                /tt}\n            }\n          `),\n      },\n    ]);\n    return { items };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"미디어 \",\n        code: codeProcess(`all : 모든 장치\n    print : 인쇄 결과물 및 출력 미리보기 화면에 표시 중인 문서\n    screen : 주로 화면이 새당\n    speech : 음성 합성장치 대상`),\n      },\n      {\n        title: \"내가 쓰는 기본구조\",\n        code: codeProcess(`@media (max-width: 400px) {\n    /ttcontent: \"mobile\";\n    /ttcolor: red;\n    }\n\n    @media (min-width: 400px) {\n        /ttcontent: \"doublephon\";\n        /ttcolor: goldenrod;\n    }\n    \n    @media (min-width: 700px) {\n        /ttcontent: \"table\";\n        /ttcolor: green;\n        }`),\n      },\n      {\n        title: \"Mixins을 사용한 미디어쿼리\",\n        code: codeProcess(`$screen: (\n  /ttxs: 475px,\n  /ttsm: 640px,\n  /ttmd: 768px,\n  /ttlg: 1024px,\n  /ttxl: 1280px,\n  /ttxxl: 1536px,\n);\n\n@mixin xs {\n  /tt----@media (min-width: 0) and (max-width: map-get($screen,xs)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin sm {\n  /tt----@media (min-width: calc(map-get($screen,xs) + 1px)) and (max-width: map-get($screen,sm)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin md {\n  /tt----@media (min-width: calc(map-get($screen,sm) + 1px)) and (max-width: map-get($screen,md)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin lg {\n  /tt----@media (min-width: calc(map-get($screen,md) + 1px)) and (max-width: map-get($screen,lg)) {\n   /tt/tt@content();\n  /tt}\n}\n@mixin xl {\n  /tt----@media (min-width: calc(map-get($screen,lg) + 1px)) and (max-width: map-get($screen,xl)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin xxl {\n  /tt----@media (min-width: calc(map-get($screen,xl) + 1px)) {\n    /tt/tt@content();\n  /tt}\n}`),\n      },\n      {\n        title: \"Mixins 사용 = include() \",\n        code: codeProcess(`\n          @include 믹스인 이름;\n          @include 믹스인 이름(인수);\n          // 변수 키워드 할당\n          @include 믹스인 이름($매개변수 : 인수);\n\n            // ex)\n            .box {\n                /ttdisplay : none;\n                /tt@icnlude md(){\n                    /tt/ttdisplay: \"block\";\n                /tt}\n            }\n          `),\n      },\n    ]);\n    return { items };\n  },\n});\n","import { render } from \"./media쿼리.vue?vue&type=template&id=61695597\"\nimport script from \"./media쿼리.vue?vue&type=script&lang=ts\"\nexport * from \"./media쿼리.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}