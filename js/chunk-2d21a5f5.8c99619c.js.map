{"version":3,"sources":["webpack:///./src/views/SCSS-views/media쿼리.vue?31e1","webpack:///./src/views/SCSS-views/media쿼리.vue","webpack:///./src/views/SCSS-views/media쿼리.vue?d269"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","render","_ctx","_cache","$props","$setup","$data","$options","_component_code_convert","items","item","key","id","title","content","code","_","setup","__exports__"],"mappings":"uIAEMA,EAA0B,eAAoB,KAAM,CAAEC,MAAO,YAAc,cAAe,GAC1FC,EAA0B,eAAoB,KAAM,KAAM,MAAO,GACjEC,EAA0B,eAAoB,KAAM,KAAM,MAAO,GAEjE,SAAUC,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,IAAMC,EAA0B,eAAkB,gBAElD,OAAQ,iBAAc,eAAoB,OAAW,KAAM,CACzDX,EACAE,EACAC,GACC,gBAAW,GAAO,eAAoB,OAAW,KAAM,eAAYE,EAAKO,OAAO,SAACC,GAC/E,OAAQ,iBAAc,eAAoB,MAAO,CAC/CC,IAAKD,EAAKE,IACT,CACD,eAAaJ,EAAyB,KAAM,CAC1CK,MAAO,gBAAS,iBAAM,CACpB,eAAiB,eAAiBH,EAAKG,OAAQ,OAEjDC,QAAS,gBAAS,iBAAM,CACtB,eAAiB,eAAiBJ,EAAKI,SAAU,OAEnDC,KAAM,gBAAS,iBAAM,CACnB,eAAiB,eAAiBL,EAAKK,MAAO,OAEhDC,EAAG,GACF,WAEH,OACH,I,gBC3BU,iBAAgB,CAC7BC,MAD6B,WAE3B,IAAMR,EAAQ,eAAS,CACrB,CACEI,MAAO,OACPE,KAAM,eAAY,4GAKpB,CACEF,MAAO,aACPE,KAAM,eAAY,2SAepB,CACEF,MAAO,oBACPE,KAAM,eAAY,o7BAwCpB,CACEF,MAAO,yBACPE,KAAM,eAAY,kVAgBtB,MAAO,CAAEN,Y,qBCtFb,MAAMS,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASjB,KAErD","file":"js/chunk-2d21a5f5.8c99619c.js","sourcesContent":["import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"div-line\" }, \"SCSS 미디어쿼리\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_code_convert = _resolveComponent(\"code-convert\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _hoisted_2,\n    _hoisted_3,\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, (item) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: item.id\n      }, [\n        _createVNode(_component_code_convert, null, {\n          title: _withCtx(() => [\n            _createTextVNode(_toDisplayString(item.title), 1)\n          ]),\n          content: _withCtx(() => [\n            _createTextVNode(_toDisplayString(item.content), 1)\n          ]),\n          code: _withCtx(() => [\n            _createTextVNode(_toDisplayString(item.code), 1)\n          ]),\n          _: 2\n        }, 1024)\n      ]))\n    }), 128))\n  ], 64))\n}","\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"미디어 \",\n        code: codeProcess(`all : 모든 장치\n    print : 인쇄 결과물 및 출력 미리보기 화면에 표시 중인 문서\n    screen : 주로 화면이 새당\n    speech : 음성 합성장치 대상`),\n      },\n      {\n        title: \"내가 쓰는 기본구조\",\n        code: codeProcess(`@media (max-width: 400px) {\n    /ttcontent: \"mobile\";\n    /ttcolor: red;\n    }\n\n    @media (min-width: 400px) {\n        /ttcontent: \"doublephon\";\n        /ttcolor: goldenrod;\n    }\n    \n    @media (min-width: 700px) {\n        /ttcontent: \"table\";\n        /ttcolor: green;\n        }`),\n      },\n      {\n        title: \"Mixins을 사용한 미디어쿼리\",\n        code: codeProcess(`$screen: (\n  /ttxs: 475px,\n  /ttsm: 640px,\n  /ttmd: 768px,\n  /ttlg: 1024px,\n  /ttxl: 1280px,\n  /ttxxl: 1536px,\n);\n\n@mixin xs {\n  /tt----@media (min-width: 0) and (max-width: map-get($screen,xs)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin sm {\n  /tt----@media (min-width: calc(map-get($screen,xs) + 1px)) and (max-width: map-get($screen,sm)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin md {\n  /tt----@media (min-width: calc(map-get($screen,sm) + 1px)) and (max-width: map-get($screen,md)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin lg {\n  /tt----@media (min-width: calc(map-get($screen,md) + 1px)) and (max-width: map-get($screen,lg)) {\n   /tt/tt@content();\n  /tt}\n}\n@mixin xl {\n  /tt----@media (min-width: calc(map-get($screen,lg) + 1px)) and (max-width: map-get($screen,xl)) {\n    /tt/tt@content();\n  /tt}\n}\n@mixin xxl {\n  /tt----@media (min-width: calc(map-get($screen,xl) + 1px)) {\n    /tt/tt@content();\n  /tt}\n}`),\n      },\n      {\n        title: \"Mixins 사용 = include() \",\n        code: codeProcess(`\n          @include 믹스인 이름;\n          @include 믹스인 이름(인수);\n          // 변수 키워드 할당\n          @include 믹스인 이름($매개변수 : 인수);\n\n            // ex)\n            .box {\n                /ttdisplay : none;\n                /tt@icnlude md(){\n                    /tt/ttdisplay: \"block\";\n                /tt}\n            }\n          `),\n      },\n    ]);\n    return { items };\n  },\n});\n","import { render } from \"./media쿼리.vue?vue&type=template&id=61695597&ts=true\"\nimport script from \"./media쿼리.vue?vue&type=script&lang=ts\"\nexport * from \"./media쿼리.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/runner/work/my_study/my_study/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}