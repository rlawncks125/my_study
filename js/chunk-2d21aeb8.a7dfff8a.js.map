{"version":3,"sources":["webpack:///./src/views/CSS-views/root의사클래스.vue","webpack:///./src/views/CSS-views/root의사클래스.vue?57b6","webpack:///./src/views/CSS-views/root의사클래스.vue?1ece"],"names":["class","title","content","code","변수선언","변수사용","Root접근","setup","data","render"],"mappings":"yIACE,eAAsC,MAAlCA,MAAM,YAAW,gBAAY,G,EACjC,eAAM,mB,EACN,eAAM,mB,iBAGa,S,iBAKA,S,iBAKA,W,iHAfnB,EACA,EACA,EAEA,eAIe,QAHFC,MAAK,gBAAC,iBAAK,C,MACXC,QAAO,gBAAlB,iBAA8B,MACnBC,KAAI,gBAAC,iBAAU,C,8BAAP,EAAAC,MAAI,O,MAEzB,eAIe,QAHFH,MAAK,gBAAC,iBAAK,C,MACXC,QAAO,gBAAlB,iBAA8B,MACnBC,KAAI,gBAAC,iBAAU,C,8BAAP,EAAAE,MAAI,O,MAEzB,eAIe,QAHFJ,MAAK,gBAAC,iBAAO,C,MACbC,QAAO,gBAAlB,iBAA8B,MACnBC,KAAI,gBAAC,iBAAY,C,8BAAT,EAAAG,QAAM,O,uCCdd,iBAAgB,CAC7BC,MAD6B,WAE3B,IAAMC,EAAO,eAAS,CACpBJ,OAAM,eAAY,2IAMlBC,OAAM,eAAY,2KAMlBC,SAAQ,eAAY,+YActB,yBAAY,eAAOE,OC9BvB,EAAOC,OAASA,EAED","file":"js/chunk-2d21aeb8.a7dfff8a.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">:root 의사 클래스</h1>\n  <hr />\n  <br />\n\n  <code-convert>\n    <template #title> 변수선언</template>\n    <template #content></template>\n    <template #code>{{ 변수선언 }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>변수사용 </template>\n    <template #content></template>\n    <template #code>{{ 변수사용 }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title> Root접근</template>\n    <template #content></template>\n    <template #code>{{ Root접근 }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      변수선언: codeProcess(` // 문서의 루트 요소 선택 = HTML에서는 <html>\n      // 전역 변수 전언\n      :root {\n          /tt변수 : 값\n          /tt--main-color : hotpink;\n      }`),\n      변수사용: codeProcess(` // var(변수,유효하지 않을시 대체값)\n      .root-span {\n        /ttcolor: var(--main-color);\n        // 변수가 유효하지않을떄 2번째 값으로대체\n        /ttcolor: var(--main-color,red);\n      }`),\n      Root접근: codeProcess(`\n      //root값 get\n      // :root값 접근 해서 값얻을수있다\n      const rootVar = getComputedStyle(document.documentElement).getPropertyValue(\"접근할변수\"); \n      \n      // :root 접근x set값을 주면 변수접근가능\n      const setVar = document.documentElement.style.getPropertyValue(\"접근할변수\"); \n\n      \n      //변수값 set\n      // 최상위 html의 변수값 지정\n      document.documentElement.style.setProperty(\"변수\", \"값\"); \n      `),\n    });\n    return { ...toRefs(data) };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"../../components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      변수선언: codeProcess(` // 문서의 루트 요소 선택 = HTML에서는 <html>\n      // 전역 변수 전언\n      :root {\n          /tt변수 : 값\n          /tt--main-color : hotpink;\n      }`),\n      변수사용: codeProcess(` // var(변수,유효하지 않을시 대체값)\n      .root-span {\n        /ttcolor: var(--main-color);\n        // 변수가 유효하지않을떄 2번째 값으로대체\n        /ttcolor: var(--main-color,red);\n      }`),\n      Root접근: codeProcess(`\n      //root값 get\n      // :root값 접근 해서 값얻을수있다\n      const rootVar = getComputedStyle(document.documentElement).getPropertyValue(\"접근할변수\"); \n      \n      // :root 접근x set값을 주면 변수접근가능\n      const setVar = document.documentElement.style.getPropertyValue(\"접근할변수\"); \n\n      \n      //변수값 set\n      // 최상위 html의 변수값 지정\n      document.documentElement.style.setProperty(\"변수\", \"값\"); \n      `),\n    });\n    return { ...toRefs(data) };\n  },\n});\n","import { render } from \"./root의사클래스.vue?vue&type=template&id=037e5c72\"\nimport script from \"./root의사클래스.vue?vue&type=script&lang=ts\"\nexport * from \"./root의사클래스.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}