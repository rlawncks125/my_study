(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21e707"],{d621:function(t,e,n){"use strict";n.r(e);var s=n("7a23"),a=Object(s["g"])("h1",{class:"div-line"},null,-1),o=Object(s["g"])("hr",null,null,-1),r=Object(s["g"])("br",null,null,-1);function c(t,e,n,c,i,u){var b=Object(s["F"])("code-convert");return Object(s["x"])(),Object(s["f"])(s["a"],null,[a,o,r,(Object(s["x"])(!0),Object(s["f"])(s["a"],null,Object(s["D"])(t.items,(function(t){return Object(s["x"])(),Object(s["f"])("div",{key:t.id},[Object(s["k"])(b,null,{title:Object(s["O"])((function(){return[Object(s["j"])(Object(s["J"])(t.title),1)]})),content:Object(s["O"])((function(){return[Object(s["j"])(Object(s["J"])(t.content),1)]})),code:Object(s["O"])((function(){return[Object(s["j"])(Object(s["J"])(t.code),1)]})),_:2},1024)])})),128))],64)}var i=n("dd39"),u=Object(s["l"])({setup:function(){var t=Object(s["B"])([{title:"vuex 세분화",code:Object(i["a"])('\n        ---- // store/getters.ts\n        import { IState as baseState } from "@/store/modules/base";\nimport { gettersParms as baseGettersParms } from "@/store/modules/base";\n\n// base\n// 함수 이름 모음\nexport enum BaseGettersTypes {\n  /ttGETTERS_BASE = "GETTERS_BASE",\n}\n\n// 함수 타입 \nexport type BaseGetters = {\n  /tt----[BaseGettersTypes.GETTERS_BASE](\n    /tt/tt---- state: baseState\n  /tt---- ): (parms: baseGettersParms) => void;\n};\n\n---- // store/module/base.ts\n// GetterType & getters 함수 타입 을하여\n// 타입 검사\nconst getters: GetterTree<IState, rootState> & BaseGetters = {\n  [BaseGettersTypes.GETTERS_BASE]:\n    /tt----(state: IState) => (payload: gettersParms) => {\n    /tt/tt  console.log(state, payload);\n    /tt----},\n};\n\n\n            ---- // store/mutations.ts\n    // base\nimport { IState as baseState } from "@/store/modules/base";\nimport { mutationsParms as baseMuationsParms } from "@/store/modules/base";\n\n// 함수 이름 모음\nexport enum BaseMuationsTypes {\n  /ttMUTATIONS_BASE = "MUTATIONS_BASE",\n}/tt\n/tt\n// 함수 타입 \nex/ttexport type BaseMutations = {\n  /tt---- [BaseMuationsTypes.MUTATIONS_BASE](\n  /tt/tt---- state: baseState,\n  /tt/tt----  payload: baseMuationsParms\n  /tt---- ): void;\n};\n\n---- // store/module/base.ts\n// MutationsType & Mutations 함수 타입 을하여\n// 타입 검사\nconst mutations: MutationTree<IState> & BaseMutations = {\n  /tt[BaseMuationsTypes.MUTATIONS_BASE]: (\n  /tt/tt  state: IState,\n  /tt/tt  payload: mutationsParms\n  /tt) => {\n  /tt/tt  console.log(state, payload);\n  /tt},\n};\n\n\n        ---- // store/actions.ts\n        import { State as rootState } from "@/store/index";\nimport { IState as baseState } from "@/store/modules/base";\nimport { actionsParms as baseActionsParms } from "@/store/modules/base";\nimport { ActionContext } from "vuex";\n\n// base\n// 함수 이름 모음\nexport enum BaseActionsTypes {\n  /ttACTIONS_BASE = "ACTIONS_BASE",\n}\n// 함수 타입 \nexport type BaseActions = {\n  /tt----[BaseActionsTypes.ACTIONS_BASE](\n  /tt/tt----  actionContext: ActionContext<baseState, rootState>,\n  /tt/tt----  paylaod: baseActionsParms\n  /tt----): void;\n};\n\n---- // store/module/base.ts\n// ActionsType & Actions 함수 타입 을하여\n// 타입 검사\nconst actions: ActionTree<IState, rootState> & BaseActions = {\n  /tt[BaseActionsTypes.ACTIONS_BASE]: async (\n  /tt/tt  actionsContext: ActionContext<IState, rootState>,\n  /tt/tt  payload: actionsParms\n  /tt) => {\n  /tt/tt  setTimeout(() => {\n  /tt/tt/tt    console.log(payload);\n  /tt/tt  }, 1000);\n  /tt},\n};\n\n\n        ')}]);return{items:t}}}),b=n("d959"),m=n.n(b);const l=m()(u,[["render",c]]);e["default"]=l}}]);
//# sourceMappingURL=chunk-2d21e707.7071036c.js.map