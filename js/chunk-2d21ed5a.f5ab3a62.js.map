{"version":3,"sources":["webpack:///./src/views/VUEX-view/파일구조.vue","webpack:///./src/views/VUEX-view/파일구조.vue?e9ab","webpack:///./src/views/VUEX-view/파일구조.vue?6ca4"],"names":["class","items","item","key","id","title","content","code","setup","store","dispatch","ACTIONS_BASE","actions","name","url","render"],"mappings":"yIACE,eAAwC,MAApCA,MAAM,YAAW,kBAAc,G,EACnC,eAAM,mB,EACN,eAAM,mB,iHAFN,EACA,EACA,G,mBACA,eAMM,2BANc,EAAAC,OAAK,SAAbC,G,wBAAZ,eAMM,OANsBC,IAAKD,EAAKE,I,CACpC,eAIe,QAHFC,MAAK,gBAAC,iBAAgB,C,8BAAbH,EAAKG,OAAK,OACnBC,QAAO,gBAAC,iBAAkB,C,8BAAfJ,EAAKI,SAAO,OACvBC,KAAI,gBAAC,iBAAe,C,8BAAZL,EAAKK,MAAI,O,+ECDnB,iBAAgB,CAC7BC,MAD6B,WAE3B,IAAMP,EAAQ,eAAS,CACrB,CACEI,MAAO,KACPE,KAAM,eAAY,waAuBhBE,EAAQ,iBAOd,OALAA,EAAMC,SACJ,OAAiBC,cACjB,IAAI,QAAOC,QAAQ,CAAEC,KAAM,UAAWC,IAAK,UAGtC,CAAEb,YCvCb,EAAOc,OAASA,EAED","file":"js/chunk-2d21ed5a.f5ab3a62.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">Vuex 애플리케이션 구조</h1>\n  <hr />\n  <br />\n  <div v-for=\"item in items\" :key=\"item.id\">\n    <code-convert>\n      <template #title>{{ item.title }} </template>\n      <template #content>{{ item.content }}</template>\n      <template #code>{{ item.code }} </template>\n    </code-convert>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\nimport { useStore } from \"@/store/index\";\nimport { Base } from \"@/store/modules/base\";\nimport { BaseActionsTypes } from \"@/store/actions\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"구조\",\n        code: codeProcess(`\n        ├ index.html\n├ main.js\n│\n├ api\n│   └ ... # API 요청을 위한 추상화를 포함합니다.\n│\n├ components\n│     ├ App.vue\n│     └ ...\n│\n└ store\n    /tt├ index.js          # 모듈을 조합하고 저장소를 내보내는 곳 입니다.\n    /tt├ getters.js        # 루트 getter\n    /tt├ actions.js        # 루트 액션\n    /tt├ mutations.js      # 루트 변이\n    /tt└ modules\n    /tt/tt    ├ cart.js       # cart 모듈\n    /tt/tt    └ products.js   # products 모듈\n     `),\n      },\n    ]);\n\n    const store = useStore();\n\n    store.dispatch(\n      BaseActionsTypes.ACTIONS_BASE,\n      new Base().actions({ name: \"actions\", url: \"http\" })\n    );\n\n    return { items };\n  },\n});\n</script>\n\n<style scoped></style>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\nimport { useStore } from \"@/store/index\";\nimport { Base } from \"@/store/modules/base\";\nimport { BaseActionsTypes } from \"@/store/actions\";\n\nexport default defineComponent({\n  setup() {\n    const items = reactive([\n      {\n        title: \"구조\",\n        code: codeProcess(`\n        ├ index.html\n├ main.js\n│\n├ api\n│   └ ... # API 요청을 위한 추상화를 포함합니다.\n│\n├ components\n│     ├ App.vue\n│     └ ...\n│\n└ store\n    /tt├ index.js          # 모듈을 조합하고 저장소를 내보내는 곳 입니다.\n    /tt├ getters.js        # 루트 getter\n    /tt├ actions.js        # 루트 액션\n    /tt├ mutations.js      # 루트 변이\n    /tt└ modules\n    /tt/tt    ├ cart.js       # cart 모듈\n    /tt/tt    └ products.js   # products 모듈\n     `),\n      },\n    ]);\n\n    const store = useStore();\n\n    store.dispatch(\n      BaseActionsTypes.ACTIONS_BASE,\n      new Base().actions({ name: \"actions\", url: \"http\" })\n    );\n\n    return { items };\n  },\n});\n","import { render } from \"./파일구조.vue?vue&type=template&id=5e775ce6\"\nimport script from \"./파일구조.vue?vue&type=script&lang=ts\"\nexport * from \"./파일구조.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}