(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d225fb9"],{e75f:function(t,e,n){"use strict";n.r(e);var o=n("7a23"),r=Object(o["g"])("h1",{class:"div-line"},"모듈 정의 및 사용",-1),u=Object(o["g"])("hr",null,null,-1),c=Object(o["g"])("br",null,null,-1);function a(t,e,n,a,s,i){var m=Object(o["F"])("code-convert");return Object(o["x"])(),Object(o["f"])(o["a"],null,[r,u,c,(Object(o["x"])(!0),Object(o["f"])(o["a"],null,Object(o["D"])(t.items,(function(t){return Object(o["x"])(),Object(o["f"])("div",{key:t.id},[Object(o["k"])(m,null,{title:Object(o["P"])((function(){return[Object(o["j"])(Object(o["J"])(t.title),1)]})),content:Object(o["P"])((function(){return[Object(o["j"])(Object(o["J"])(t.content),1)]})),code:Object(o["P"])((function(){return[Object(o["j"])(Object(o["J"])(t.code),1)]})),_:2},1024)])})),128))],64)}var s=n("dd39"),i=Object(o["l"])({setup:function(){var t=Object(o["B"])([{title:"TypeScript를 이용한 index 정의",code:Object(s["a"])('// store/index.ts\n\n        import { InjectionKey } from "vue";\nimport { createStore, useStore as baseUseStore, Store } from "vuex";\n// 모듈 import\nimport { module as ModuleA , IModule as IModuleA  } from "modules/moduleA"\nimport { module as ModuleB , IModule as IModuleB  } from "modules/moduleB"\n\n\n// 인터페이스 정의\nexport interface State {\n\t/ttcount : number;\n\t/tttitle : string;\n\t/tt// 모듈 정의 \n\t/ttmoduleA ?: ImoduleA(module Interface)\n\t/ttmoduleB ?: ImoduleB(module Interface)\n}\n\n// Symbol를 이용한 키생성\nexport const key: InjectionKey<Store<State>> = Symbol();\n\n\n//store 정의\nexport const store = createStore<State>({\n  /ttstate: {\n  /tt/ttcount: 1,\n  /tt/tttitle: "타이틀틀"\n  /tt},\n  /tt// Computed 와 같은 역할\n/tt// 사용할떄 한번만 사용, 데이터 바뀌면 감지해서 바뀜\n/ttgetters: {},\n/tt// 함수\n/ttmutations: {},\n/tt// 비동기 처리 할떄 씀\n/ttactions: {};\n\t// 모듈 사용 ,\n\t/ttmodules : {\n\t/tt/ttmoduleA,\n\t/tt/ttmoduleB \n\t/tt}\n});\n\n// Composition Api에서 접근할떄 이함수를 사용\nexport function useStore(): Store<State> {\n  return baseUseStore(key);\n}')},{title:"선언",code:Object(s["a"])('\n          //main.ts 선언\nimport { store, key } from "./store/index";\n\nvue.use(store , key);\n          ')},{title:"TypeScript를 이용한 모듈 만들기 1",code:Object(s["a"])('\n          // store/modules/module\nimport { Module } from "vuex";\nimport { State as rootState } from "../index";\n\ninterface IState{\n\t/ttname : string,\n\t/ttdescript : string;\n}\n\nexport const module :Module<IState, rootState> = {\n\t// 호출할떄 [moduleName/호출] 로 호출\n\t// moduleName 은 modules에 정의된 모듈이름 따라감\n  // namespaced: true, \n  // Data 와 같은 역할\n\tstate: { \n\t\t/ttname : "모듈"\n\t\t/ttdescript : "모듈정의 하는 방법 입니다."\n\t},\n\t// Computed 와 같은 역할 \n\t// 사용할떄 한번만 사용, 데이터 바뀌면 감지해서 바뀜\n  getters: {},\n\t// 함수\n  mutations: {},\n\t// 비동기 처리 할떄 씀\n  actions: {};\n};\n          ')},{title:"TypeScirpt를 이용한 모듈 만들기 2",code:Object(s["a"])('\n        import { ActionTree, GetterTree, Module, MutationTree } from "vuex";\nimport { State as rootState } from "../index";\n\nexport interface IState {\n  rootName: string;\n  url: string;\n}\n\nconst state: IState = {\n  name: "",\n  age: "",\n};\n\nconst getters: GetterTree<IState, rootState> = {\n\n};\n\nconst mutations: MutationTree<IState> = {\n\n};\n\nconst actions: ActionTree<IState, rootState> = {\n\n};\n\nexport const module: Module<IState, rootState> = {\n\t// 호출할떄 [moduleName/호출] 로 호출\n\t// moduleName 은 modules에 정의된 모듈이름 따라감\n  // namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n  modules: {},\n};\n        ')}]);return{items:t}}}),m=n("d959"),d=n.n(m);const l=d()(i,[["render",a]]);e["default"]=l}}]);
//# sourceMappingURL=chunk-2d225fb9.ad9cc5ae.js.map