{"version":3,"sources":["webpack:///./src/views/VUE-views/템플릿_문법.vue","webpack:///./src/views/VUE-views/템플릿_문법.vue?81dd","webpack:///./src/views/VUE-views/템플릿_문법.vue?3633","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["class","href","target","title","문자열","content","msg","code","원시HTML","rawHtml","속성","id","attrId","disabled","JavaScrpit_표현식","js","number","ok","message","split","reverse","join","name","boolean","동적전달","attrNameValue","setup","data","attrName","render","$","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","ES3_STRINGS","Object","STRICT_METHOD","proto","forced","separator","call","this","undefined","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","match","error"],"mappings":"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","file":"js/chunk-8cd92004.548f1e4d.js","sourcesContent":["<template>\n  <h1 class=\"div-line\">템블릿 문법</h1>\n  <span>공식홈페이지 : </span\n  ><a href=\"https://kr.vuejs.org/v2/guide/syntax.html\" target=\"_black\"\n    >https://kr.vuejs.org/v2/guide/syntax.html</a\n  >\n  <hr />\n  <br />\n\n  <code-convert>\n    <template #title>{{ 문자열.title }} </template>\n    <template #content>\n      <p>{{ msg }}</p>\n      <p v-once>업데이트 하지 않습니다.{{ msg }}</p>\n    </template>\n    <template #code>{{ 문자열.code }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>{{ 원시HTML.title }} </template>\n    <template #content>\n      <p>텍스트 보간시 : {{ rawHtml }}</p>\n      <p>v-html 디렉티브시 : <span v-html=\"rawHtml\"></span></p>\n    </template>\n    <template #code>{{ 원시HTML.code }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>{{ 속성.title }} </template>\n    <template #content>\n      <div :id=\"attrId\">HTMl 속성사용시 v-bind디렉티브 사용</div>\n      <button :disabled=\"disabled\">Button</button>\n    </template>\n    <template #code>{{ 속성.code }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>{{ JavaScrpit_표현식.title }} </template>\n    <template #content>\n      <p>\n        {{ js.number + 1 }}\n      </p>\n      <p>\n        {{ js.ok ? \"yes\" : \"no\" }}\n      </p>\n      <p>\n        {{ js.message.split(\"\").reverse().join(\"\") }}\n      </p>\n      <div :id=\"'list-' + js.name\"></div>\n      <button @click=\"js.boolean = !js.boolean\">\n        값 할당 : {{ js.boolean }}\n      </button>\n    </template>\n    <template #code>{{ JavaScrpit_표현식.code }} </template>\n  </code-convert>\n  <code-convert>\n    <template #title>{{ 동적전달.title }} </template>\n    <template #content>\n      <p :[attrName]=\"attrNameValue\"></p>\n    </template>\n    <template #code>{{ 동적전달.code }} </template>\n  </code-convert>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      msg: \"문자열 보간입니다.\",\n      rawHtml: \"<span style='color: red;'>rawHtml</span>\",\n      attrId: \"attr_Id\",\n      disabled: true,\n      js: {\n        number: 22,\n        ok: true,\n        message: \"안녕 하세요 템플릿 문법 입니다.\",\n        name: \"키오스크\",\n        boolean: true,\n      },\n      attrName: \"id\",\n      attrNameValue: \"동적전달_Id\",\n    });\n    const 문자열 = reactive({\n      title: \"문자열\",\n      code: codeProcess(`\n      <span>{{ msg }}</span>\n      <span v-once>변경시 업데이트 하지 않습니다.{{ msg }}</span>\n\n    //   데이터\n    msg: \"문자열 보간입니다.\",\n      `),\n    });\n    const 원시HTML = reactive({\n      title: \"원시HTML\",\n      code: codeProcess(`\n      ---- <p>텍스트 보간시 : {{ rawHtml }}</p>\n      ---- <p>v-html 디렉티브시 : <span v-html=\"rawHtml\"></span></p>\n\n    //   데이터\n    ---- rawHtml: \"<span style='color: red;'>rawHtml</span>\",\n      `),\n    });\n    const 속성 = reactive({\n      title: \"속성\",\n      code: codeProcess(`\n      <div :id=\"attrId\">HTMl 속성사용시 v-bind디렉티브 사용</div>\n      <button :disabled=\"disabled\">Button</button>\n\n    //   데이터\n     attrId: \"attr_Id\",\n      disabled: true,\n      `),\n    });\n    const JavaScrpit_표현식 = reactive({\n      title: \"JavaScrpit_표현식\",\n      code: codeProcess(`\n        {{ js.number + 1 }}\n        {{ js.ok ? \"yes\" : \"no\" }}\n        {{ js.message.split(\" \").reverse().join(\" \") }}\n      <div :id = \"'list-' + js.name\"></div>\n      <button @click=\"js.boolean = !js.boolean\">값 할당 : {{ js.boolean }}</button>\n\n    //   데이터\n     js: {\n        /ttnumber: 22,\n        /ttok: true,\n        /ttmessage: \"안녕 하세요 템플릿 문법 입니다.\",\n        /ttname: \"키오스크\",\n        /ttboolean: true,\n      },\n      `),\n    });\n    const 동적전달 = reactive({\n      title: \"동적 전달\",\n      code: codeProcess(`\n        <p :[attrName]=\"attrNameValue\"></p>\n\n        // 데이터\n         attrName: \"id\",\n      attrNameValue: \"동적전달_Id\",\n      `),\n    });\n\n    return {\n      ...toRefs(data),\n      문자열,\n      원시HTML,\n      속성,\n      JavaScrpit_표현식,\n      동적전달,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { codeProcess } from \"@/components/codeConvert.vue\";\n\nexport default defineComponent({\n  setup() {\n    const data = reactive({\n      msg: \"문자열 보간입니다.\",\n      rawHtml: \"<span style='color: red;'>rawHtml</span>\",\n      attrId: \"attr_Id\",\n      disabled: true,\n      js: {\n        number: 22,\n        ok: true,\n        message: \"안녕 하세요 템플릿 문법 입니다.\",\n        name: \"키오스크\",\n        boolean: true,\n      },\n      attrName: \"id\",\n      attrNameValue: \"동적전달_Id\",\n    });\n    const 문자열 = reactive({\n      title: \"문자열\",\n      code: codeProcess(`\n      <span>{{ msg }}</span>\n      <span v-once>변경시 업데이트 하지 않습니다.{{ msg }}</span>\n\n    //   데이터\n    msg: \"문자열 보간입니다.\",\n      `),\n    });\n    const 원시HTML = reactive({\n      title: \"원시HTML\",\n      code: codeProcess(`\n      ---- <p>텍스트 보간시 : {{ rawHtml }}</p>\n      ---- <p>v-html 디렉티브시 : <span v-html=\"rawHtml\"></span></p>\n\n    //   데이터\n    ---- rawHtml: \"<span style='color: red;'>rawHtml</span>\",\n      `),\n    });\n    const 속성 = reactive({\n      title: \"속성\",\n      code: codeProcess(`\n      <div :id=\"attrId\">HTMl 속성사용시 v-bind디렉티브 사용</div>\n      <button :disabled=\"disabled\">Button</button>\n\n    //   데이터\n     attrId: \"attr_Id\",\n      disabled: true,\n      `),\n    });\n    const JavaScrpit_표현식 = reactive({\n      title: \"JavaScrpit_표현식\",\n      code: codeProcess(`\n        {{ js.number + 1 }}\n        {{ js.ok ? \"yes\" : \"no\" }}\n        {{ js.message.split(\" \").reverse().join(\" \") }}\n      <div :id = \"'list-' + js.name\"></div>\n      <button @click=\"js.boolean = !js.boolean\">값 할당 : {{ js.boolean }}</button>\n\n    //   데이터\n     js: {\n        /ttnumber: 22,\n        /ttok: true,\n        /ttmessage: \"안녕 하세요 템플릿 문법 입니다.\",\n        /ttname: \"키오스크\",\n        /ttboolean: true,\n      },\n      `),\n    });\n    const 동적전달 = reactive({\n      title: \"동적 전달\",\n      code: codeProcess(`\n        <p :[attrName]=\"attrNameValue\"></p>\n\n        // 데이터\n         attrName: \"id\",\n      attrNameValue: \"동적전달_Id\",\n      `),\n    });\n\n    return {\n      ...toRefs(data),\n      문자열,\n      원시HTML,\n      속성,\n      JavaScrpit_표현식,\n      동적전달,\n    };\n  },\n});\n","import { render } from \"./템플릿_문법.vue?vue&type=template&id=c5375196\"\nimport script from \"./템플릿_문법.vue?vue&type=script&lang=ts\"\nexport * from \"./템플릿_문법.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}